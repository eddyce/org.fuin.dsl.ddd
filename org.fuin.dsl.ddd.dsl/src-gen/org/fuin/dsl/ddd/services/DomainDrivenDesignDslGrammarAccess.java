/*
* generated by Xtext
*/
package org.fuin.dsl.ddd.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class DomainDrivenDesignDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class DomainModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DomainModel");
		private final Assignment cContextsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cContextsContextParserRuleCall_0 = (RuleCall)cContextsAssignment.eContents().get(0);
		
		//DomainModel:
		//	contexts+=Context*;
		public ParserRule getRule() { return rule; }

		//contexts+=Context*
		public Assignment getContextsAssignment() { return cContextsAssignment; }

		//Context
		public RuleCall getContextsContextParserRuleCall_0() { return cContextsContextParserRuleCall_0; }
	}

	public class ContextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Context");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNamespacesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNamespacesNamespaceParserRuleCall_3_0 = (RuleCall)cNamespacesAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Context:
		//	"context" name=ID "{" namespaces+=Namespace* "}";
		public ParserRule getRule() { return rule; }

		//"context" name=ID "{" namespaces+=Namespace* "}"
		public Group getGroup() { return cGroup; }

		//"context"
		public Keyword getContextKeyword_0() { return cContextKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//namespaces+=Namespace*
		public Assignment getNamespacesAssignment_3() { return cNamespacesAssignment_3; }

		//Namespace
		public RuleCall getNamespacesNamespaceParserRuleCall_3_0() { return cNamespacesNamespaceParserRuleCall_3_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}

	public class NamespaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Namespace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNamespaceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameFQNParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cImportsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cImportsImportParserRuleCall_3_0 = (RuleCall)cImportsAssignment_3.eContents().get(0);
		private final Assignment cElementsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cElementsAbstractElementParserRuleCall_4_0 = (RuleCall)cElementsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Namespace:
		//	"namespace" name=FQN "{" imports+=Import* elements+=AbstractElement* "}";
		public ParserRule getRule() { return rule; }

		//"namespace" name=FQN "{" imports+=Import* elements+=AbstractElement* "}"
		public Group getGroup() { return cGroup; }

		//"namespace"
		public Keyword getNamespaceKeyword_0() { return cNamespaceKeyword_0; }

		//name=FQN
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//FQN
		public RuleCall getNameFQNParserRuleCall_1_0() { return cNameFQNParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//imports+=Import*
		public Assignment getImportsAssignment_3() { return cImportsAssignment_3; }

		//Import
		public RuleCall getImportsImportParserRuleCall_3_0() { return cImportsImportParserRuleCall_3_0; }

		//elements+=AbstractElement*
		public Assignment getElementsAssignment_4() { return cElementsAssignment_4; }

		//AbstractElement
		public RuleCall getElementsAbstractElementParserRuleCall_4_0() { return cElementsAbstractElementParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ImportElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Import");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportedNamespaceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cImportedNamespaceAlternatives_1_0 = (Alternatives)cImportedNamespaceAssignment_1.eContents().get(0);
		private final RuleCall cImportedNamespaceFQNParserRuleCall_1_0_0 = (RuleCall)cImportedNamespaceAlternatives_1_0.eContents().get(0);
		private final RuleCall cImportedNamespaceFQNWithWildcardParserRuleCall_1_0_1 = (RuleCall)cImportedNamespaceAlternatives_1_0.eContents().get(1);
		
		//Import:
		//	"import" importedNamespace=(FQN | FQNWithWildcard);
		public ParserRule getRule() { return rule; }

		//"import" importedNamespace=(FQN | FQNWithWildcard)
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importedNamespace=(FQN | FQNWithWildcard)
		public Assignment getImportedNamespaceAssignment_1() { return cImportedNamespaceAssignment_1; }

		//FQN | FQNWithWildcard
		public Alternatives getImportedNamespaceAlternatives_1_0() { return cImportedNamespaceAlternatives_1_0; }

		//FQN
		public RuleCall getImportedNamespaceFQNParserRuleCall_1_0_0() { return cImportedNamespaceFQNParserRuleCall_1_0_0; }

		//FQNWithWildcard
		public RuleCall getImportedNamespaceFQNWithWildcardParserRuleCall_1_0_1() { return cImportedNamespaceFQNWithWildcardParserRuleCall_1_0_1; }
	}

	public class AbstractElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConstraintParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cExceptionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cEventParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//AbstractElement:
		//	Constraint | Type | Exception | Event;
		public ParserRule getRule() { return rule; }

		//Constraint | Type | Exception | Event
		public Alternatives getAlternatives() { return cAlternatives; }

		//Constraint
		public RuleCall getConstraintParserRuleCall_0() { return cConstraintParserRuleCall_0; }

		//Type
		public RuleCall getTypeParserRuleCall_1() { return cTypeParserRuleCall_1; }

		//Exception
		public RuleCall getExceptionParserRuleCall_2() { return cExceptionParserRuleCall_2; }

		//Event
		public RuleCall getEventParserRuleCall_3() { return cEventParserRuleCall_3; }
	}

	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cExternalTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cInternalTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cServiceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Type:
		//	ExternalType | InternalType | Service;
		public ParserRule getRule() { return rule; }

		//ExternalType | InternalType | Service
		public Alternatives getAlternatives() { return cAlternatives; }

		//ExternalType
		public RuleCall getExternalTypeParserRuleCall_0() { return cExternalTypeParserRuleCall_0; }

		//InternalType
		public RuleCall getInternalTypeParserRuleCall_1() { return cInternalTypeParserRuleCall_1; }

		//Service
		public RuleCall getServiceParserRuleCall_2() { return cServiceParserRuleCall_2; }
	}

	public class InternalTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InternalType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAbstractVOParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAbstractEntityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cEnumObjectParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//InternalType:
		//	AbstractVO | AbstractEntity | EnumObject;
		public ParserRule getRule() { return rule; }

		//AbstractVO | AbstractEntity | EnumObject
		public Alternatives getAlternatives() { return cAlternatives; }

		//AbstractVO
		public RuleCall getAbstractVOParserRuleCall_0() { return cAbstractVOParserRuleCall_0; }

		//AbstractEntity
		public RuleCall getAbstractEntityParserRuleCall_1() { return cAbstractEntityParserRuleCall_1; }

		//EnumObject
		public RuleCall getEnumObjectParserRuleCall_2() { return cEnumObjectParserRuleCall_2; }
	}

	public class AbstractVOElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractVO");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cValueObjectParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAbstractEntityIdParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractVO:
		//	ValueObject | AbstractEntityId;
		public ParserRule getRule() { return rule; }

		//ValueObject | AbstractEntityId
		public Alternatives getAlternatives() { return cAlternatives; }

		//ValueObject
		public RuleCall getValueObjectParserRuleCall_0() { return cValueObjectParserRuleCall_0; }

		//AbstractEntityId
		public RuleCall getAbstractEntityIdParserRuleCall_1() { return cAbstractEntityIdParserRuleCall_1; }
	}

	public class AbstractEntityIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractEntityId");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEntityIdParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAggregateIdParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractEntityId:
		//	EntityId | AggregateId;
		public ParserRule getRule() { return rule; }

		//EntityId | AggregateId
		public Alternatives getAlternatives() { return cAlternatives; }

		//EntityId
		public RuleCall getEntityIdParserRuleCall_0() { return cEntityIdParserRuleCall_0; }

		//AggregateId
		public RuleCall getAggregateIdParserRuleCall_1() { return cAggregateIdParserRuleCall_1; }
	}

	public class AbstractEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractEntity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEntityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAggregateParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractEntity:
		//	Entity | Aggregate;
		public ParserRule getRule() { return rule; }

		//Entity | Aggregate
		public Alternatives getAlternatives() { return cAlternatives; }

		//Entity
		public RuleCall getEntityParserRuleCall_0() { return cEntityParserRuleCall_0; }

		//Aggregate
		public RuleCall getAggregateParserRuleCall_1() { return cAggregateParserRuleCall_1; }
	}

	public class ConstraintTargetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConstraintTarget");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cExternalTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAbstractVOParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ConstraintTarget:
		//	ExternalType | AbstractVO;
		public ParserRule getRule() { return rule; }

		//ExternalType | AbstractVO
		public Alternatives getAlternatives() { return cAlternatives; }

		//ExternalType
		public RuleCall getExternalTypeParserRuleCall_0() { return cExternalTypeParserRuleCall_0; }

		//AbstractVO
		public RuleCall getAbstractVOParserRuleCall_1() { return cAbstractVOParserRuleCall_1; }
	}

	public class ExternalTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ExternalType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cElementElementKeyword_2_0 = (Keyword)cElementAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		
		//ExternalType:
		//	doc=DOC? "type" element="element"? name=ID;
		public ParserRule getRule() { return rule; }

		//doc=DOC? "type" element="element"? name=ID
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"type"
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }

		//element="element"?
		public Assignment getElementAssignment_2() { return cElementAssignment_2; }

		//"element"
		public Keyword getElementElementKeyword_2_0() { return cElementElementKeyword_2_0; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
	}

	public class ConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Constraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cConstraintKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cOnKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTargetAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cTargetConstraintTargetCrossReference_3_1_0 = (CrossReference)cTargetAssignment_3_1.eContents().get(0);
		private final RuleCall cTargetConstraintTargetFQNParserRuleCall_3_1_0_1 = (RuleCall)cTargetConstraintTargetCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExceptionKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cExceptionAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cExceptionExceptionCrossReference_4_1_0 = (CrossReference)cExceptionAssignment_4_1.eContents().get(0);
		private final RuleCall cExceptionExceptionFQNParserRuleCall_4_1_0_1 = (RuleCall)cExceptionExceptionCrossReference_4_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cVariablesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cVariablesVariableParserRuleCall_6_0 = (RuleCall)cVariablesAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cMessageKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cMessageAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cMessageSTRINGTerminalRuleCall_7_1_0 = (RuleCall)cMessageAssignment_7_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Constraint:
		//	doc=DOC? "constraint" name=ID ("on" target=[ConstraintTarget|FQN])? ("exception" exception=[Exception|FQN])? "{"
		//	variables+=Variable* ("message" message=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//doc=DOC? "constraint" name=ID ("on" target=[ConstraintTarget|FQN])? ("exception" exception=[Exception|FQN])? "{"
		//variables+=Variable* ("message" message=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"constraint"
		public Keyword getConstraintKeyword_1() { return cConstraintKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("on" target=[ConstraintTarget|FQN])?
		public Group getGroup_3() { return cGroup_3; }

		//"on"
		public Keyword getOnKeyword_3_0() { return cOnKeyword_3_0; }

		//target=[ConstraintTarget|FQN]
		public Assignment getTargetAssignment_3_1() { return cTargetAssignment_3_1; }

		//[ConstraintTarget|FQN]
		public CrossReference getTargetConstraintTargetCrossReference_3_1_0() { return cTargetConstraintTargetCrossReference_3_1_0; }

		//FQN
		public RuleCall getTargetConstraintTargetFQNParserRuleCall_3_1_0_1() { return cTargetConstraintTargetFQNParserRuleCall_3_1_0_1; }

		//("exception" exception=[Exception|FQN])?
		public Group getGroup_4() { return cGroup_4; }

		//"exception"
		public Keyword getExceptionKeyword_4_0() { return cExceptionKeyword_4_0; }

		//exception=[Exception|FQN]
		public Assignment getExceptionAssignment_4_1() { return cExceptionAssignment_4_1; }

		//[Exception|FQN]
		public CrossReference getExceptionExceptionCrossReference_4_1_0() { return cExceptionExceptionCrossReference_4_1_0; }

		//FQN
		public RuleCall getExceptionExceptionFQNParserRuleCall_4_1_0_1() { return cExceptionExceptionFQNParserRuleCall_4_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//variables+=Variable*
		public Assignment getVariablesAssignment_6() { return cVariablesAssignment_6; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_6_0() { return cVariablesVariableParserRuleCall_6_0; }

		//("message" message=STRING)?
		public Group getGroup_7() { return cGroup_7; }

		//"message"
		public Keyword getMessageKeyword_7_0() { return cMessageKeyword_7_0; }

		//message=STRING
		public Assignment getMessageAssignment_7_1() { return cMessageAssignment_7_1; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_7_1_0() { return cMessageSTRINGTerminalRuleCall_7_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class ExceptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Exception");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cExceptionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCidKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCidAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCidINTTerminalRuleCall_3_1_0 = (RuleCall)cCidAssignment_3_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cVariablesAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cVariablesVariableParserRuleCall_5_0 = (RuleCall)cVariablesAssignment_5.eContents().get(0);
		private final Keyword cMessageKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMessageAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMessageSTRINGTerminalRuleCall_7_0 = (RuleCall)cMessageAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Exception:
		//	doc=DOC? "exception" name=ID ("cid" cid=INT)? "{" variables+=Variable* "message" message=STRING "}";
		public ParserRule getRule() { return rule; }

		//doc=DOC? "exception" name=ID ("cid" cid=INT)? "{" variables+=Variable* "message" message=STRING "}"
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"exception"
		public Keyword getExceptionKeyword_1() { return cExceptionKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("cid" cid=INT)?
		public Group getGroup_3() { return cGroup_3; }

		//"cid"
		public Keyword getCidKeyword_3_0() { return cCidKeyword_3_0; }

		//cid=INT
		public Assignment getCidAssignment_3_1() { return cCidAssignment_3_1; }

		//INT
		public RuleCall getCidINTTerminalRuleCall_3_1_0() { return cCidINTTerminalRuleCall_3_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//variables+=Variable*
		public Assignment getVariablesAssignment_5() { return cVariablesAssignment_5; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_5_0() { return cVariablesVariableParserRuleCall_5_0; }

		//"message"
		public Keyword getMessageKeyword_6() { return cMessageKeyword_6; }

		//message=STRING
		public Assignment getMessageAssignment_7() { return cMessageAssignment_7; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_7_0() { return cMessageSTRINGTerminalRuleCall_7_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class ValueObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValueObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cValueObjectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBaseKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBaseAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cBaseExternalTypeCrossReference_3_1_0 = (CrossReference)cBaseAssignment_3_1.eContents().get(0);
		private final RuleCall cBaseExternalTypeFQNParserRuleCall_3_1_0_1 = (RuleCall)cBaseExternalTypeCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMetaInfoAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMetaInfoTypeMetaInfoParserRuleCall_5_0 = (RuleCall)cMetaInfoAssignment_5.eContents().get(0);
		private final Assignment cVariablesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cVariablesVariableParserRuleCall_6_0 = (RuleCall)cVariablesAssignment_6.eContents().get(0);
		private final Assignment cConstructorsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cConstructorsConstructorParserRuleCall_7_0 = (RuleCall)cConstructorsAssignment_7.eContents().get(0);
		private final Assignment cMethodsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cMethodsMethodParserRuleCall_8_0 = (RuleCall)cMethodsAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//ValueObject:
		//	doc=DOC? "value-object" name=ID ("base" base=[ExternalType|FQN])? "{" metaInfo=TypeMetaInfo variables+=Variable*
		//	constructors+=Constructor* methods+=Method* "}";
		public ParserRule getRule() { return rule; }

		//doc=DOC? "value-object" name=ID ("base" base=[ExternalType|FQN])? "{" metaInfo=TypeMetaInfo variables+=Variable*
		//constructors+=Constructor* methods+=Method* "}"
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"value-object"
		public Keyword getValueObjectKeyword_1() { return cValueObjectKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("base" base=[ExternalType|FQN])?
		public Group getGroup_3() { return cGroup_3; }

		//"base"
		public Keyword getBaseKeyword_3_0() { return cBaseKeyword_3_0; }

		//base=[ExternalType|FQN]
		public Assignment getBaseAssignment_3_1() { return cBaseAssignment_3_1; }

		//[ExternalType|FQN]
		public CrossReference getBaseExternalTypeCrossReference_3_1_0() { return cBaseExternalTypeCrossReference_3_1_0; }

		//FQN
		public RuleCall getBaseExternalTypeFQNParserRuleCall_3_1_0_1() { return cBaseExternalTypeFQNParserRuleCall_3_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//metaInfo=TypeMetaInfo
		public Assignment getMetaInfoAssignment_5() { return cMetaInfoAssignment_5; }

		//TypeMetaInfo
		public RuleCall getMetaInfoTypeMetaInfoParserRuleCall_5_0() { return cMetaInfoTypeMetaInfoParserRuleCall_5_0; }

		//variables+=Variable*
		public Assignment getVariablesAssignment_6() { return cVariablesAssignment_6; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_6_0() { return cVariablesVariableParserRuleCall_6_0; }

		//constructors+=Constructor*
		public Assignment getConstructorsAssignment_7() { return cConstructorsAssignment_7; }

		//Constructor
		public RuleCall getConstructorsConstructorParserRuleCall_7_0() { return cConstructorsConstructorParserRuleCall_7_0; }

		//methods+=Method*
		public Assignment getMethodsAssignment_8() { return cMethodsAssignment_8; }

		//Method
		public RuleCall getMethodsMethodParserRuleCall_8_0() { return cMethodsMethodParserRuleCall_8_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}

	public class EntityIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EntityId");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cEntityIdKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cIdentifiesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEntityAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cEntityEntityCrossReference_4_0 = (CrossReference)cEntityAssignment_4.eContents().get(0);
		private final RuleCall cEntityEntityFQNParserRuleCall_4_0_1 = (RuleCall)cEntityEntityCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cBaseKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cBaseAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cBaseExternalTypeCrossReference_5_1_0 = (CrossReference)cBaseAssignment_5_1.eContents().get(0);
		private final RuleCall cBaseExternalTypeFQNParserRuleCall_5_1_0_1 = (RuleCall)cBaseExternalTypeCrossReference_5_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMetaInfoAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMetaInfoTypeMetaInfoParserRuleCall_7_0 = (RuleCall)cMetaInfoAssignment_7.eContents().get(0);
		private final Assignment cVariablesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cVariablesVariableParserRuleCall_8_0 = (RuleCall)cVariablesAssignment_8.eContents().get(0);
		private final Assignment cConstructorsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cConstructorsConstructorParserRuleCall_9_0 = (RuleCall)cConstructorsAssignment_9.eContents().get(0);
		private final Assignment cMethodsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cMethodsMethodParserRuleCall_10_0 = (RuleCall)cMethodsAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//EntityId:
		//	doc=DOC? "entity-id" name=ID "identifies" entity=[Entity|FQN] ("base" base=[ExternalType|FQN])? "{"
		//	metaInfo=TypeMetaInfo variables+=Variable* constructors+=Constructor* methods+=Method* "}";
		public ParserRule getRule() { return rule; }

		//doc=DOC? "entity-id" name=ID "identifies" entity=[Entity|FQN] ("base" base=[ExternalType|FQN])? "{"
		//metaInfo=TypeMetaInfo variables+=Variable* constructors+=Constructor* methods+=Method* "}"
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"entity-id"
		public Keyword getEntityIdKeyword_1() { return cEntityIdKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"identifies"
		public Keyword getIdentifiesKeyword_3() { return cIdentifiesKeyword_3; }

		//entity=[Entity|FQN]
		public Assignment getEntityAssignment_4() { return cEntityAssignment_4; }

		//[Entity|FQN]
		public CrossReference getEntityEntityCrossReference_4_0() { return cEntityEntityCrossReference_4_0; }

		//FQN
		public RuleCall getEntityEntityFQNParserRuleCall_4_0_1() { return cEntityEntityFQNParserRuleCall_4_0_1; }

		//("base" base=[ExternalType|FQN])?
		public Group getGroup_5() { return cGroup_5; }

		//"base"
		public Keyword getBaseKeyword_5_0() { return cBaseKeyword_5_0; }

		//base=[ExternalType|FQN]
		public Assignment getBaseAssignment_5_1() { return cBaseAssignment_5_1; }

		//[ExternalType|FQN]
		public CrossReference getBaseExternalTypeCrossReference_5_1_0() { return cBaseExternalTypeCrossReference_5_1_0; }

		//FQN
		public RuleCall getBaseExternalTypeFQNParserRuleCall_5_1_0_1() { return cBaseExternalTypeFQNParserRuleCall_5_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//metaInfo=TypeMetaInfo
		public Assignment getMetaInfoAssignment_7() { return cMetaInfoAssignment_7; }

		//TypeMetaInfo
		public RuleCall getMetaInfoTypeMetaInfoParserRuleCall_7_0() { return cMetaInfoTypeMetaInfoParserRuleCall_7_0; }

		//variables+=Variable*
		public Assignment getVariablesAssignment_8() { return cVariablesAssignment_8; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_8_0() { return cVariablesVariableParserRuleCall_8_0; }

		//constructors+=Constructor*
		public Assignment getConstructorsAssignment_9() { return cConstructorsAssignment_9; }

		//Constructor
		public RuleCall getConstructorsConstructorParserRuleCall_9_0() { return cConstructorsConstructorParserRuleCall_9_0; }

		//methods+=Method*
		public Assignment getMethodsAssignment_10() { return cMethodsAssignment_10; }

		//Method
		public RuleCall getMethodsMethodParserRuleCall_10_0() { return cMethodsMethodParserRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class AggregateIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AggregateId");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cAggregateIdKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cIdentifiesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cEntityAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cEntityAggregateCrossReference_4_0 = (CrossReference)cEntityAssignment_4.eContents().get(0);
		private final RuleCall cEntityAggregateFQNParserRuleCall_4_0_1 = (RuleCall)cEntityAggregateCrossReference_4_0.eContents().get(1);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cBaseKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cBaseAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cBaseExternalTypeCrossReference_5_1_0 = (CrossReference)cBaseAssignment_5_1.eContents().get(0);
		private final RuleCall cBaseExternalTypeFQNParserRuleCall_5_1_0_1 = (RuleCall)cBaseExternalTypeCrossReference_5_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMetaInfoAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMetaInfoTypeMetaInfoParserRuleCall_7_0 = (RuleCall)cMetaInfoAssignment_7.eContents().get(0);
		private final Assignment cVariablesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cVariablesVariableParserRuleCall_8_0 = (RuleCall)cVariablesAssignment_8.eContents().get(0);
		private final Assignment cConstructorsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cConstructorsConstructorParserRuleCall_9_0 = (RuleCall)cConstructorsAssignment_9.eContents().get(0);
		private final Assignment cMethodsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cMethodsMethodParserRuleCall_10_0 = (RuleCall)cMethodsAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//AggregateId:
		//	doc=DOC? "aggregate-id" name=ID "identifies" entity=[Aggregate|FQN] ("base" base=[ExternalType|FQN])? "{"
		//	metaInfo=TypeMetaInfo variables+=Variable* constructors+=Constructor* methods+=Method* "}";
		public ParserRule getRule() { return rule; }

		//doc=DOC? "aggregate-id" name=ID "identifies" entity=[Aggregate|FQN] ("base" base=[ExternalType|FQN])? "{"
		//metaInfo=TypeMetaInfo variables+=Variable* constructors+=Constructor* methods+=Method* "}"
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"aggregate-id"
		public Keyword getAggregateIdKeyword_1() { return cAggregateIdKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"identifies"
		public Keyword getIdentifiesKeyword_3() { return cIdentifiesKeyword_3; }

		//entity=[Aggregate|FQN]
		public Assignment getEntityAssignment_4() { return cEntityAssignment_4; }

		//[Aggregate|FQN]
		public CrossReference getEntityAggregateCrossReference_4_0() { return cEntityAggregateCrossReference_4_0; }

		//FQN
		public RuleCall getEntityAggregateFQNParserRuleCall_4_0_1() { return cEntityAggregateFQNParserRuleCall_4_0_1; }

		//("base" base=[ExternalType|FQN])?
		public Group getGroup_5() { return cGroup_5; }

		//"base"
		public Keyword getBaseKeyword_5_0() { return cBaseKeyword_5_0; }

		//base=[ExternalType|FQN]
		public Assignment getBaseAssignment_5_1() { return cBaseAssignment_5_1; }

		//[ExternalType|FQN]
		public CrossReference getBaseExternalTypeCrossReference_5_1_0() { return cBaseExternalTypeCrossReference_5_1_0; }

		//FQN
		public RuleCall getBaseExternalTypeFQNParserRuleCall_5_1_0_1() { return cBaseExternalTypeFQNParserRuleCall_5_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//metaInfo=TypeMetaInfo
		public Assignment getMetaInfoAssignment_7() { return cMetaInfoAssignment_7; }

		//TypeMetaInfo
		public RuleCall getMetaInfoTypeMetaInfoParserRuleCall_7_0() { return cMetaInfoTypeMetaInfoParserRuleCall_7_0; }

		//variables+=Variable*
		public Assignment getVariablesAssignment_8() { return cVariablesAssignment_8; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_8_0() { return cVariablesVariableParserRuleCall_8_0; }

		//constructors+=Constructor*
		public Assignment getConstructorsAssignment_9() { return cConstructorsAssignment_9; }

		//Constructor
		public RuleCall getConstructorsConstructorParserRuleCall_9_0() { return cConstructorsConstructorParserRuleCall_9_0; }

		//methods+=Method*
		public Assignment getMethodsAssignment_10() { return cMethodsAssignment_10; }

		//Method
		public RuleCall getMethodsMethodParserRuleCall_10_0() { return cMethodsMethodParserRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class EnumObjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumObject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cEnumKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cBaseKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cBaseAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cBaseExternalTypeCrossReference_3_1_0 = (CrossReference)cBaseAssignment_3_1.eContents().get(0);
		private final RuleCall cBaseExternalTypeFQNParserRuleCall_3_1_0_1 = (RuleCall)cBaseExternalTypeCrossReference_3_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMetaInfoAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMetaInfoTypeMetaInfoParserRuleCall_5_0 = (RuleCall)cMetaInfoAssignment_5.eContents().get(0);
		private final Assignment cVariablesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cVariablesVariableParserRuleCall_6_0 = (RuleCall)cVariablesAssignment_6.eContents().get(0);
		private final Keyword cInstancesKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cInstancesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cInstancesEnumInstanceParserRuleCall_9_0 = (RuleCall)cInstancesAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//EnumObject:
		//	doc=DOC? "enum" name=ID ("base" base=[ExternalType|FQN])? "{" metaInfo=TypeMetaInfo variables+=Variable* "instances"
		//	"{" instances+=EnumInstance+ "}" "}";
		public ParserRule getRule() { return rule; }

		//doc=DOC? "enum" name=ID ("base" base=[ExternalType|FQN])? "{" metaInfo=TypeMetaInfo variables+=Variable* "instances" "{"
		//instances+=EnumInstance+ "}" "}"
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"enum"
		public Keyword getEnumKeyword_1() { return cEnumKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("base" base=[ExternalType|FQN])?
		public Group getGroup_3() { return cGroup_3; }

		//"base"
		public Keyword getBaseKeyword_3_0() { return cBaseKeyword_3_0; }

		//base=[ExternalType|FQN]
		public Assignment getBaseAssignment_3_1() { return cBaseAssignment_3_1; }

		//[ExternalType|FQN]
		public CrossReference getBaseExternalTypeCrossReference_3_1_0() { return cBaseExternalTypeCrossReference_3_1_0; }

		//FQN
		public RuleCall getBaseExternalTypeFQNParserRuleCall_3_1_0_1() { return cBaseExternalTypeFQNParserRuleCall_3_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//metaInfo=TypeMetaInfo
		public Assignment getMetaInfoAssignment_5() { return cMetaInfoAssignment_5; }

		//TypeMetaInfo
		public RuleCall getMetaInfoTypeMetaInfoParserRuleCall_5_0() { return cMetaInfoTypeMetaInfoParserRuleCall_5_0; }

		//variables+=Variable*
		public Assignment getVariablesAssignment_6() { return cVariablesAssignment_6; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_6_0() { return cVariablesVariableParserRuleCall_6_0; }

		//"instances"
		public Keyword getInstancesKeyword_7() { return cInstancesKeyword_7; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }

		//instances+=EnumInstance+
		public Assignment getInstancesAssignment_9() { return cInstancesAssignment_9; }

		//EnumInstance
		public RuleCall getInstancesEnumInstanceParserRuleCall_9_0() { return cInstancesEnumInstanceParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class EnumInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EnumInstance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Assignment cDeprecatedAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cDeprecatedDeprecatedKeyword_1_0 = (Keyword)cDeprecatedAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cParamsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cParamsLiteralParserRuleCall_3_1_0 = (RuleCall)cParamsAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cParamsAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cParamsLiteralParserRuleCall_3_2_1_0 = (RuleCall)cParamsAssignment_3_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		
		//EnumInstance:
		//	doc=DOC? deprecated="deprecated"? name=ID ("(" params+=Literal ("," params+=Literal)* ")")?;
		public ParserRule getRule() { return rule; }

		//doc=DOC? deprecated="deprecated"? name=ID ("(" params+=Literal ("," params+=Literal)* ")")?
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//deprecated="deprecated"?
		public Assignment getDeprecatedAssignment_1() { return cDeprecatedAssignment_1; }

		//"deprecated"
		public Keyword getDeprecatedDeprecatedKeyword_1_0() { return cDeprecatedDeprecatedKeyword_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("(" params+=Literal ("," params+=Literal)* ")")?
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//params+=Literal
		public Assignment getParamsAssignment_3_1() { return cParamsAssignment_3_1; }

		//Literal
		public RuleCall getParamsLiteralParserRuleCall_3_1_0() { return cParamsLiteralParserRuleCall_3_1_0; }

		//("," params+=Literal)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//params+=Literal
		public Assignment getParamsAssignment_3_2_1() { return cParamsAssignment_3_2_1; }

		//Literal
		public RuleCall getParamsLiteralParserRuleCall_3_2_1_0() { return cParamsLiteralParserRuleCall_3_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }
	}

	public class EventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Event");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cEventKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cVariablesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cVariablesVariableParserRuleCall_4_0 = (RuleCall)cVariablesAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMessageKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cMessageAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cMessageSTRINGTerminalRuleCall_5_1_0 = (RuleCall)cMessageAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Event:
		//	doc=DOC? "event" name=ID "{" variables+=Variable* ("message" message=STRING)? "}";
		public ParserRule getRule() { return rule; }

		//doc=DOC? "event" name=ID "{" variables+=Variable* ("message" message=STRING)? "}"
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"event"
		public Keyword getEventKeyword_1() { return cEventKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//variables+=Variable*
		public Assignment getVariablesAssignment_4() { return cVariablesAssignment_4; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_4_0() { return cVariablesVariableParserRuleCall_4_0; }

		//("message" message=STRING)?
		public Group getGroup_5() { return cGroup_5; }

		//"message"
		public Keyword getMessageKeyword_5_0() { return cMessageKeyword_5_0; }

		//message=STRING
		public Assignment getMessageAssignment_5_1() { return cMessageAssignment_5_1; }

		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_5_1_0() { return cMessageSTRINGTerminalRuleCall_5_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cEntityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cIdentifierKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cIdTypeEntityIdCrossReference_4_0 = (CrossReference)cIdTypeAssignment_4.eContents().get(0);
		private final RuleCall cIdTypeEntityIdFQNParserRuleCall_4_0_1 = (RuleCall)cIdTypeEntityIdCrossReference_4_0.eContents().get(1);
		private final Keyword cRootKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cRootAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cRootAggregateCrossReference_6_0 = (CrossReference)cRootAssignment_6.eContents().get(0);
		private final RuleCall cRootAggregateFQNParserRuleCall_6_0_1 = (RuleCall)cRootAggregateCrossReference_6_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cMetaInfoAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cMetaInfoTypeMetaInfoParserRuleCall_8_0 = (RuleCall)cMetaInfoAssignment_8.eContents().get(0);
		private final Assignment cVariablesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cVariablesVariableParserRuleCall_9_0 = (RuleCall)cVariablesAssignment_9.eContents().get(0);
		private final Assignment cConstructorsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cConstructorsConstructorParserRuleCall_10_0 = (RuleCall)cConstructorsAssignment_10.eContents().get(0);
		private final Assignment cMethodsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cMethodsMethodParserRuleCall_11_0 = (RuleCall)cMethodsAssignment_11.eContents().get(0);
		private final Assignment cEventsAssignment_12 = (Assignment)cGroup.eContents().get(12);
		private final RuleCall cEventsEventParserRuleCall_12_0 = (RuleCall)cEventsAssignment_12.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Entity:
		//	doc=DOC? "entity" name=ID "identifier" idType=[EntityId|FQN] "root" root=[Aggregate|FQN] "{" metaInfo=TypeMetaInfo
		//	variables+=Variable* constructors+=Constructor* methods+=Method* events+=Event* "}";
		public ParserRule getRule() { return rule; }

		//doc=DOC? "entity" name=ID "identifier" idType=[EntityId|FQN] "root" root=[Aggregate|FQN] "{" metaInfo=TypeMetaInfo
		//variables+=Variable* constructors+=Constructor* methods+=Method* events+=Event* "}"
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"entity"
		public Keyword getEntityKeyword_1() { return cEntityKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"identifier"
		public Keyword getIdentifierKeyword_3() { return cIdentifierKeyword_3; }

		//idType=[EntityId|FQN]
		public Assignment getIdTypeAssignment_4() { return cIdTypeAssignment_4; }

		//[EntityId|FQN]
		public CrossReference getIdTypeEntityIdCrossReference_4_0() { return cIdTypeEntityIdCrossReference_4_0; }

		//FQN
		public RuleCall getIdTypeEntityIdFQNParserRuleCall_4_0_1() { return cIdTypeEntityIdFQNParserRuleCall_4_0_1; }

		//"root"
		public Keyword getRootKeyword_5() { return cRootKeyword_5; }

		//root=[Aggregate|FQN]
		public Assignment getRootAssignment_6() { return cRootAssignment_6; }

		//[Aggregate|FQN]
		public CrossReference getRootAggregateCrossReference_6_0() { return cRootAggregateCrossReference_6_0; }

		//FQN
		public RuleCall getRootAggregateFQNParserRuleCall_6_0_1() { return cRootAggregateFQNParserRuleCall_6_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//metaInfo=TypeMetaInfo
		public Assignment getMetaInfoAssignment_8() { return cMetaInfoAssignment_8; }

		//TypeMetaInfo
		public RuleCall getMetaInfoTypeMetaInfoParserRuleCall_8_0() { return cMetaInfoTypeMetaInfoParserRuleCall_8_0; }

		//variables+=Variable*
		public Assignment getVariablesAssignment_9() { return cVariablesAssignment_9; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_9_0() { return cVariablesVariableParserRuleCall_9_0; }

		//constructors+=Constructor*
		public Assignment getConstructorsAssignment_10() { return cConstructorsAssignment_10; }

		//Constructor
		public RuleCall getConstructorsConstructorParserRuleCall_10_0() { return cConstructorsConstructorParserRuleCall_10_0; }

		//methods+=Method*
		public Assignment getMethodsAssignment_11() { return cMethodsAssignment_11; }

		//Method
		public RuleCall getMethodsMethodParserRuleCall_11_0() { return cMethodsMethodParserRuleCall_11_0; }

		//events+=Event*
		public Assignment getEventsAssignment_12() { return cEventsAssignment_12; }

		//Event
		public RuleCall getEventsEventParserRuleCall_12_0() { return cEventsEventParserRuleCall_12_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}

	public class AggregateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Aggregate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cAggregateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cIdentifierKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIdTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cIdTypeAggregateIdCrossReference_4_0 = (CrossReference)cIdTypeAssignment_4.eContents().get(0);
		private final RuleCall cIdTypeAggregateIdFQNParserRuleCall_4_0_1 = (RuleCall)cIdTypeAggregateIdCrossReference_4_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cMetaInfoAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cMetaInfoTypeMetaInfoParserRuleCall_6_0 = (RuleCall)cMetaInfoAssignment_6.eContents().get(0);
		private final Assignment cVariablesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cVariablesVariableParserRuleCall_7_0 = (RuleCall)cVariablesAssignment_7.eContents().get(0);
		private final Assignment cConstructorsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cConstructorsConstructorParserRuleCall_8_0 = (RuleCall)cConstructorsAssignment_8.eContents().get(0);
		private final Assignment cMethodsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cMethodsMethodParserRuleCall_9_0 = (RuleCall)cMethodsAssignment_9.eContents().get(0);
		private final Assignment cEventsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cEventsEventParserRuleCall_10_0 = (RuleCall)cEventsAssignment_10.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Aggregate:
		//	doc=DOC? "aggregate" name=ID "identifier" idType=[AggregateId|FQN] "{" metaInfo=TypeMetaInfo variables+=Variable*
		//	constructors+=Constructor* methods+=Method* events+=Event* "}";
		public ParserRule getRule() { return rule; }

		//doc=DOC? "aggregate" name=ID "identifier" idType=[AggregateId|FQN] "{" metaInfo=TypeMetaInfo variables+=Variable*
		//constructors+=Constructor* methods+=Method* events+=Event* "}"
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"aggregate"
		public Keyword getAggregateKeyword_1() { return cAggregateKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"identifier"
		public Keyword getIdentifierKeyword_3() { return cIdentifierKeyword_3; }

		//idType=[AggregateId|FQN]
		public Assignment getIdTypeAssignment_4() { return cIdTypeAssignment_4; }

		//[AggregateId|FQN]
		public CrossReference getIdTypeAggregateIdCrossReference_4_0() { return cIdTypeAggregateIdCrossReference_4_0; }

		//FQN
		public RuleCall getIdTypeAggregateIdFQNParserRuleCall_4_0_1() { return cIdTypeAggregateIdFQNParserRuleCall_4_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//metaInfo=TypeMetaInfo
		public Assignment getMetaInfoAssignment_6() { return cMetaInfoAssignment_6; }

		//TypeMetaInfo
		public RuleCall getMetaInfoTypeMetaInfoParserRuleCall_6_0() { return cMetaInfoTypeMetaInfoParserRuleCall_6_0; }

		//variables+=Variable*
		public Assignment getVariablesAssignment_7() { return cVariablesAssignment_7; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_7_0() { return cVariablesVariableParserRuleCall_7_0; }

		//constructors+=Constructor*
		public Assignment getConstructorsAssignment_8() { return cConstructorsAssignment_8; }

		//Constructor
		public RuleCall getConstructorsConstructorParserRuleCall_8_0() { return cConstructorsConstructorParserRuleCall_8_0; }

		//methods+=Method*
		public Assignment getMethodsAssignment_9() { return cMethodsAssignment_9; }

		//Method
		public RuleCall getMethodsMethodParserRuleCall_9_0() { return cMethodsMethodParserRuleCall_9_0; }

		//events+=Event*
		public Assignment getEventsAssignment_10() { return cEventsAssignment_10; }

		//Event
		public RuleCall getEventsEventParserRuleCall_10_0() { return cEventsEventParserRuleCall_10_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}

	public class AbstractMethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractMethod");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConstructorParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMethodParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractMethod:
		//	Constructor | Method;
		public ParserRule getRule() { return rule; }

		//Constructor | Method
		public Alternatives getAlternatives() { return cAlternatives; }

		//Constructor
		public RuleCall getConstructorParserRuleCall_0() { return cConstructorParserRuleCall_0; }

		//Method
		public RuleCall getMethodParserRuleCall_1() { return cMethodParserRuleCall_1; }
	}

	public class ConstructorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Constructor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cConstructorKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cConstraintsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cConstraintCallsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cConstraintCallsConstraintInstanceParserRuleCall_3_1_0 = (RuleCall)cConstraintCallsAssignment_3_1.eContents().get(0);
		private final Group cGroup_3_2 = (Group)cGroup_3.eContents().get(2);
		private final Keyword cCommaKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Assignment cConstraintCallsAssignment_3_2_1 = (Assignment)cGroup_3_2.eContents().get(1);
		private final RuleCall cConstraintCallsConstraintInstanceParserRuleCall_3_2_1_0 = (RuleCall)cConstraintCallsAssignment_3_2_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cFiresKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cFiredEventsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cFiredEventsEventCrossReference_4_1_0 = (CrossReference)cFiredEventsAssignment_4_1.eContents().get(0);
		private final RuleCall cFiredEventsEventFQNParserRuleCall_4_1_0_1 = (RuleCall)cFiredEventsEventCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cFiredEventsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cFiredEventsEventCrossReference_4_2_1_0 = (CrossReference)cFiredEventsAssignment_4_2_1.eContents().get(0);
		private final RuleCall cFiredEventsEventFQNParserRuleCall_4_2_1_0_1 = (RuleCall)cFiredEventsEventCrossReference_4_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cVariablesAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cVariablesVariableParserRuleCall_6_0 = (RuleCall)cVariablesAssignment_6.eContents().get(0);
		private final Assignment cServiceAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cServiceServiceCrossReference_7_0 = (CrossReference)cServiceAssignment_7.eContents().get(0);
		private final RuleCall cServiceServiceFQNParserRuleCall_7_0_1 = (RuleCall)cServiceServiceCrossReference_7_0.eContents().get(1);
		private final Assignment cServicesAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cServicesServiceParserRuleCall_8_0 = (RuleCall)cServicesAssignment_8.eContents().get(0);
		private final Assignment cEventsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cEventsEventParserRuleCall_9_0 = (RuleCall)cEventsAssignment_9.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Constructor:
		//	doc=DOC? "constructor" name=ID ("constraints" constraintCalls+=ConstraintInstance (","
		//	constraintCalls+=ConstraintInstance)*)? ("fires" firedEvents+=[Event|FQN] ("," firedEvents+=[Event|FQN])*)? "{"
		//	variables+=Variable* service=[Service|FQN]? services+=Service* events+=Event* "}";
		public ParserRule getRule() { return rule; }

		//doc=DOC? "constructor" name=ID ("constraints" constraintCalls+=ConstraintInstance (","
		//constraintCalls+=ConstraintInstance)*)? ("fires" firedEvents+=[Event|FQN] ("," firedEvents+=[Event|FQN])*)? "{"
		//variables+=Variable* service=[Service|FQN]? services+=Service* events+=Event* "}"
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"constructor"
		public Keyword getConstructorKeyword_1() { return cConstructorKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("constraints" constraintCalls+=ConstraintInstance ("," constraintCalls+=ConstraintInstance)*)?
		public Group getGroup_3() { return cGroup_3; }

		//"constraints"
		public Keyword getConstraintsKeyword_3_0() { return cConstraintsKeyword_3_0; }

		//constraintCalls+=ConstraintInstance
		public Assignment getConstraintCallsAssignment_3_1() { return cConstraintCallsAssignment_3_1; }

		//ConstraintInstance
		public RuleCall getConstraintCallsConstraintInstanceParserRuleCall_3_1_0() { return cConstraintCallsConstraintInstanceParserRuleCall_3_1_0; }

		//("," constraintCalls+=ConstraintInstance)*
		public Group getGroup_3_2() { return cGroup_3_2; }

		//","
		public Keyword getCommaKeyword_3_2_0() { return cCommaKeyword_3_2_0; }

		//constraintCalls+=ConstraintInstance
		public Assignment getConstraintCallsAssignment_3_2_1() { return cConstraintCallsAssignment_3_2_1; }

		//ConstraintInstance
		public RuleCall getConstraintCallsConstraintInstanceParserRuleCall_3_2_1_0() { return cConstraintCallsConstraintInstanceParserRuleCall_3_2_1_0; }

		//("fires" firedEvents+=[Event|FQN] ("," firedEvents+=[Event|FQN])*)?
		public Group getGroup_4() { return cGroup_4; }

		//"fires"
		public Keyword getFiresKeyword_4_0() { return cFiresKeyword_4_0; }

		//firedEvents+=[Event|FQN]
		public Assignment getFiredEventsAssignment_4_1() { return cFiredEventsAssignment_4_1; }

		//[Event|FQN]
		public CrossReference getFiredEventsEventCrossReference_4_1_0() { return cFiredEventsEventCrossReference_4_1_0; }

		//FQN
		public RuleCall getFiredEventsEventFQNParserRuleCall_4_1_0_1() { return cFiredEventsEventFQNParserRuleCall_4_1_0_1; }

		//("," firedEvents+=[Event|FQN])*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//firedEvents+=[Event|FQN]
		public Assignment getFiredEventsAssignment_4_2_1() { return cFiredEventsAssignment_4_2_1; }

		//[Event|FQN]
		public CrossReference getFiredEventsEventCrossReference_4_2_1_0() { return cFiredEventsEventCrossReference_4_2_1_0; }

		//FQN
		public RuleCall getFiredEventsEventFQNParserRuleCall_4_2_1_0_1() { return cFiredEventsEventFQNParserRuleCall_4_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//variables+=Variable*
		public Assignment getVariablesAssignment_6() { return cVariablesAssignment_6; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_6_0() { return cVariablesVariableParserRuleCall_6_0; }

		//service=[Service|FQN]?
		public Assignment getServiceAssignment_7() { return cServiceAssignment_7; }

		//[Service|FQN]
		public CrossReference getServiceServiceCrossReference_7_0() { return cServiceServiceCrossReference_7_0; }

		//FQN
		public RuleCall getServiceServiceFQNParserRuleCall_7_0_1() { return cServiceServiceFQNParserRuleCall_7_0_1; }

		//services+=Service*
		public Assignment getServicesAssignment_8() { return cServicesAssignment_8; }

		//Service
		public RuleCall getServicesServiceParserRuleCall_8_0() { return cServicesServiceParserRuleCall_8_0; }

		//events+=Event*
		public Assignment getEventsAssignment_9() { return cEventsAssignment_9; }

		//Event
		public RuleCall getEventsEventParserRuleCall_9_0() { return cEventsEventParserRuleCall_9_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}

	public class ReturnTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReturnType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cReturnsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeTypeFQNParserRuleCall_2_0_1 = (RuleCall)cTypeTypeCrossReference_2_0.eContents().get(1);
		
		//ReturnType:
		//	doc=DOC? "returns" type=[Type|FQN];
		public ParserRule getRule() { return rule; }

		//doc=DOC? "returns" type=[Type|FQN]
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"returns"
		public Keyword getReturnsKeyword_1() { return cReturnsKeyword_1; }

		//type=[Type|FQN]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//[Type|FQN]
		public CrossReference getTypeTypeCrossReference_2_0() { return cTypeTypeCrossReference_2_0; }

		//FQN
		public RuleCall getTypeTypeFQNParserRuleCall_2_0_1() { return cTypeTypeFQNParserRuleCall_2_0_1; }
	}

	public class MethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Method");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cMethodKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cRefKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cRefMethodAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cRefMethodMethodCrossReference_3_1_0 = (CrossReference)cRefMethodAssignment_3_1.eContents().get(0);
		private final RuleCall cRefMethodMethodFQNParserRuleCall_3_1_0_1 = (RuleCall)cRefMethodMethodCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cConstraintsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cConstraintCallsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cConstraintCallsConstraintInstanceParserRuleCall_4_1_0 = (RuleCall)cConstraintCallsAssignment_4_1.eContents().get(0);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cCommaKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cConstraintCallsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final RuleCall cConstraintCallsConstraintInstanceParserRuleCall_4_2_1_0 = (RuleCall)cConstraintCallsAssignment_4_2_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cFiresKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cFiredEventsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final CrossReference cFiredEventsEventCrossReference_5_1_0 = (CrossReference)cFiredEventsAssignment_5_1.eContents().get(0);
		private final RuleCall cFiredEventsEventFQNParserRuleCall_5_1_0_1 = (RuleCall)cFiredEventsEventCrossReference_5_1_0.eContents().get(1);
		private final Group cGroup_5_2 = (Group)cGroup_5.eContents().get(2);
		private final Keyword cCommaKeyword_5_2_0 = (Keyword)cGroup_5_2.eContents().get(0);
		private final Assignment cFiredEventsAssignment_5_2_1 = (Assignment)cGroup_5_2.eContents().get(1);
		private final CrossReference cFiredEventsEventCrossReference_5_2_1_0 = (CrossReference)cFiredEventsAssignment_5_2_1.eContents().get(0);
		private final RuleCall cFiredEventsEventFQNParserRuleCall_5_2_1_0_1 = (RuleCall)cFiredEventsEventCrossReference_5_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cVariablesAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cVariablesVariableParserRuleCall_7_0 = (RuleCall)cVariablesAssignment_7.eContents().get(0);
		private final Assignment cServiceAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cServiceServiceCrossReference_8_0 = (CrossReference)cServiceAssignment_8.eContents().get(0);
		private final RuleCall cServiceServiceFQNParserRuleCall_8_0_1 = (RuleCall)cServiceServiceCrossReference_8_0.eContents().get(1);
		private final Assignment cReturnTypeAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cReturnTypeReturnTypeParserRuleCall_9_0 = (RuleCall)cReturnTypeAssignment_9.eContents().get(0);
		private final Assignment cServicesAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cServicesServiceParserRuleCall_10_0 = (RuleCall)cServicesAssignment_10.eContents().get(0);
		private final Assignment cEventsAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cEventsEventParserRuleCall_11_0 = (RuleCall)cEventsAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Method:
		//	doc=DOC? "method" name=ID ("ref" refMethod=[Method|FQN])? ("constraints" constraintCalls+=ConstraintInstance (","
		//	constraintCalls+=ConstraintInstance)*)? ("fires" firedEvents+=[Event|FQN] ("," firedEvents+=[Event|FQN])*)? "{"
		//	variables+=Variable* service=[Service|FQN]? returnType=ReturnType? services+=Service* events+=Event* "}";
		public ParserRule getRule() { return rule; }

		//doc=DOC? "method" name=ID ("ref" refMethod=[Method|FQN])? ("constraints" constraintCalls+=ConstraintInstance (","
		//constraintCalls+=ConstraintInstance)*)? ("fires" firedEvents+=[Event|FQN] ("," firedEvents+=[Event|FQN])*)? "{"
		//variables+=Variable* service=[Service|FQN]? returnType=ReturnType? services+=Service* events+=Event* "}"
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"method"
		public Keyword getMethodKeyword_1() { return cMethodKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//("ref" refMethod=[Method|FQN])?
		public Group getGroup_3() { return cGroup_3; }

		//"ref"
		public Keyword getRefKeyword_3_0() { return cRefKeyword_3_0; }

		//refMethod=[Method|FQN]
		public Assignment getRefMethodAssignment_3_1() { return cRefMethodAssignment_3_1; }

		//[Method|FQN]
		public CrossReference getRefMethodMethodCrossReference_3_1_0() { return cRefMethodMethodCrossReference_3_1_0; }

		//FQN
		public RuleCall getRefMethodMethodFQNParserRuleCall_3_1_0_1() { return cRefMethodMethodFQNParserRuleCall_3_1_0_1; }

		//("constraints" constraintCalls+=ConstraintInstance ("," constraintCalls+=ConstraintInstance)*)?
		public Group getGroup_4() { return cGroup_4; }

		//"constraints"
		public Keyword getConstraintsKeyword_4_0() { return cConstraintsKeyword_4_0; }

		//constraintCalls+=ConstraintInstance
		public Assignment getConstraintCallsAssignment_4_1() { return cConstraintCallsAssignment_4_1; }

		//ConstraintInstance
		public RuleCall getConstraintCallsConstraintInstanceParserRuleCall_4_1_0() { return cConstraintCallsConstraintInstanceParserRuleCall_4_1_0; }

		//("," constraintCalls+=ConstraintInstance)*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//","
		public Keyword getCommaKeyword_4_2_0() { return cCommaKeyword_4_2_0; }

		//constraintCalls+=ConstraintInstance
		public Assignment getConstraintCallsAssignment_4_2_1() { return cConstraintCallsAssignment_4_2_1; }

		//ConstraintInstance
		public RuleCall getConstraintCallsConstraintInstanceParserRuleCall_4_2_1_0() { return cConstraintCallsConstraintInstanceParserRuleCall_4_2_1_0; }

		//("fires" firedEvents+=[Event|FQN] ("," firedEvents+=[Event|FQN])*)?
		public Group getGroup_5() { return cGroup_5; }

		//"fires"
		public Keyword getFiresKeyword_5_0() { return cFiresKeyword_5_0; }

		//firedEvents+=[Event|FQN]
		public Assignment getFiredEventsAssignment_5_1() { return cFiredEventsAssignment_5_1; }

		//[Event|FQN]
		public CrossReference getFiredEventsEventCrossReference_5_1_0() { return cFiredEventsEventCrossReference_5_1_0; }

		//FQN
		public RuleCall getFiredEventsEventFQNParserRuleCall_5_1_0_1() { return cFiredEventsEventFQNParserRuleCall_5_1_0_1; }

		//("," firedEvents+=[Event|FQN])*
		public Group getGroup_5_2() { return cGroup_5_2; }

		//","
		public Keyword getCommaKeyword_5_2_0() { return cCommaKeyword_5_2_0; }

		//firedEvents+=[Event|FQN]
		public Assignment getFiredEventsAssignment_5_2_1() { return cFiredEventsAssignment_5_2_1; }

		//[Event|FQN]
		public CrossReference getFiredEventsEventCrossReference_5_2_1_0() { return cFiredEventsEventCrossReference_5_2_1_0; }

		//FQN
		public RuleCall getFiredEventsEventFQNParserRuleCall_5_2_1_0_1() { return cFiredEventsEventFQNParserRuleCall_5_2_1_0_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_6() { return cLeftCurlyBracketKeyword_6; }

		//variables+=Variable*
		public Assignment getVariablesAssignment_7() { return cVariablesAssignment_7; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_7_0() { return cVariablesVariableParserRuleCall_7_0; }

		//service=[Service|FQN]?
		public Assignment getServiceAssignment_8() { return cServiceAssignment_8; }

		//[Service|FQN]
		public CrossReference getServiceServiceCrossReference_8_0() { return cServiceServiceCrossReference_8_0; }

		//FQN
		public RuleCall getServiceServiceFQNParserRuleCall_8_0_1() { return cServiceServiceFQNParserRuleCall_8_0_1; }

		//returnType=ReturnType?
		public Assignment getReturnTypeAssignment_9() { return cReturnTypeAssignment_9; }

		//ReturnType
		public RuleCall getReturnTypeReturnTypeParserRuleCall_9_0() { return cReturnTypeReturnTypeParserRuleCall_9_0; }

		//services+=Service*
		public Assignment getServicesAssignment_10() { return cServicesAssignment_10; }

		//Service
		public RuleCall getServicesServiceParserRuleCall_10_0() { return cServicesServiceParserRuleCall_10_0; }

		//events+=Event*
		public Assignment getEventsAssignment_11() { return cEventsAssignment_11; }

		//Event
		public RuleCall getEventsEventParserRuleCall_11_0() { return cEventsEventParserRuleCall_11_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}

	public class TypeMetaInfoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeMetaInfo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTypeMetaInfoAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cSlabelKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSlabelAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSlabelSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cSlabelAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLabelKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cLabelAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cLabelSTRINGTerminalRuleCall_2_1_0 = (RuleCall)cLabelAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTooltipKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTooltipAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTooltipSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cTooltipAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cPromptKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cPromptAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cPromptSTRINGTerminalRuleCall_4_1_0 = (RuleCall)cPromptAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cExamplesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cExamplesAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cExamplesLiteralParserRuleCall_5_1_0 = (RuleCall)cExamplesAssignment_5_1.eContents().get(0);
		
		//TypeMetaInfo:
		//	{TypeMetaInfo} ("slabel" slabel=STRING)? ("label" label=STRING)? ("tooltip" tooltip=STRING)? ("prompt" prompt=STRING)?
		//	("examples" examples+=Literal*)?;
		public ParserRule getRule() { return rule; }

		//{TypeMetaInfo} ("slabel" slabel=STRING)? ("label" label=STRING)? ("tooltip" tooltip=STRING)? ("prompt" prompt=STRING)?
		//("examples" examples+=Literal*)?
		public Group getGroup() { return cGroup; }

		//{TypeMetaInfo}
		public Action getTypeMetaInfoAction_0() { return cTypeMetaInfoAction_0; }

		//("slabel" slabel=STRING)?
		public Group getGroup_1() { return cGroup_1; }

		//"slabel"
		public Keyword getSlabelKeyword_1_0() { return cSlabelKeyword_1_0; }

		//slabel=STRING
		public Assignment getSlabelAssignment_1_1() { return cSlabelAssignment_1_1; }

		//STRING
		public RuleCall getSlabelSTRINGTerminalRuleCall_1_1_0() { return cSlabelSTRINGTerminalRuleCall_1_1_0; }

		//("label" label=STRING)?
		public Group getGroup_2() { return cGroup_2; }

		//"label"
		public Keyword getLabelKeyword_2_0() { return cLabelKeyword_2_0; }

		//label=STRING
		public Assignment getLabelAssignment_2_1() { return cLabelAssignment_2_1; }

		//STRING
		public RuleCall getLabelSTRINGTerminalRuleCall_2_1_0() { return cLabelSTRINGTerminalRuleCall_2_1_0; }

		//("tooltip" tooltip=STRING)?
		public Group getGroup_3() { return cGroup_3; }

		//"tooltip"
		public Keyword getTooltipKeyword_3_0() { return cTooltipKeyword_3_0; }

		//tooltip=STRING
		public Assignment getTooltipAssignment_3_1() { return cTooltipAssignment_3_1; }

		//STRING
		public RuleCall getTooltipSTRINGTerminalRuleCall_3_1_0() { return cTooltipSTRINGTerminalRuleCall_3_1_0; }

		//("prompt" prompt=STRING)?
		public Group getGroup_4() { return cGroup_4; }

		//"prompt"
		public Keyword getPromptKeyword_4_0() { return cPromptKeyword_4_0; }

		//prompt=STRING
		public Assignment getPromptAssignment_4_1() { return cPromptAssignment_4_1; }

		//STRING
		public RuleCall getPromptSTRINGTerminalRuleCall_4_1_0() { return cPromptSTRINGTerminalRuleCall_4_1_0; }

		//("examples" examples+=Literal*)?
		public Group getGroup_5() { return cGroup_5; }

		//"examples"
		public Keyword getExamplesKeyword_5_0() { return cExamplesKeyword_5_0; }

		//examples+=Literal*
		public Assignment getExamplesAssignment_5_1() { return cExamplesAssignment_5_1; }

		//Literal
		public RuleCall getExamplesLiteralParserRuleCall_5_1_0() { return cExamplesLiteralParserRuleCall_5_1_0; }
	}

	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Assignment cNullableAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNullableNullableKeyword_1_0 = (Keyword)cNullableAssignment_1.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeTypeFQNParserRuleCall_2_0_1 = (RuleCall)cTypeTypeCrossReference_2_0.eContents().get(1);
		private final Assignment cMultiplicityAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final Keyword cMultiplicityAsteriskKeyword_3_0 = (Keyword)cMultiplicityAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cInvariantsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cInvariantsInvariantsParserRuleCall_5_0 = (RuleCall)cInvariantsAssignment_5.eContents().get(0);
		private final Assignment cOverriddenAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOverriddenOverriddenTypeMetaInfoParserRuleCall_6_0 = (RuleCall)cOverriddenAssignment_6.eContents().get(0);
		
		//Variable:
		//	doc=DOC? nullable="nullable"? type=[Type|FQN] multiplicity="*"? name=ID invariants=Invariants?
		//	overridden=OverriddenTypeMetaInfo?;
		public ParserRule getRule() { return rule; }

		//doc=DOC? nullable="nullable"? type=[Type|FQN] multiplicity="*"? name=ID invariants=Invariants?
		//overridden=OverriddenTypeMetaInfo?
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//nullable="nullable"?
		public Assignment getNullableAssignment_1() { return cNullableAssignment_1; }

		//"nullable"
		public Keyword getNullableNullableKeyword_1_0() { return cNullableNullableKeyword_1_0; }

		//type=[Type|FQN]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//[Type|FQN]
		public CrossReference getTypeTypeCrossReference_2_0() { return cTypeTypeCrossReference_2_0; }

		//FQN
		public RuleCall getTypeTypeFQNParserRuleCall_2_0_1() { return cTypeTypeFQNParserRuleCall_2_0_1; }

		//multiplicity="*"?
		public Assignment getMultiplicityAssignment_3() { return cMultiplicityAssignment_3; }

		//"*"
		public Keyword getMultiplicityAsteriskKeyword_3_0() { return cMultiplicityAsteriskKeyword_3_0; }

		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }

		//invariants=Invariants?
		public Assignment getInvariantsAssignment_5() { return cInvariantsAssignment_5; }

		//Invariants
		public RuleCall getInvariantsInvariantsParserRuleCall_5_0() { return cInvariantsInvariantsParserRuleCall_5_0; }

		//overridden=OverriddenTypeMetaInfo?
		public Assignment getOverriddenAssignment_6() { return cOverriddenAssignment_6; }

		//OverriddenTypeMetaInfo
		public RuleCall getOverriddenOverriddenTypeMetaInfoParserRuleCall_6_0() { return cOverriddenOverriddenTypeMetaInfoParserRuleCall_6_0; }
	}

	public class InvariantsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Invariants");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cInvariantsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cInstancesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cInstancesConstraintInstanceParserRuleCall_1_0 = (RuleCall)cInstancesAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cInstancesAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cInstancesConstraintInstanceParserRuleCall_2_1_0 = (RuleCall)cInstancesAssignment_2_1.eContents().get(0);
		
		//Invariants:
		//	"invariants" instances+=ConstraintInstance ("," instances+=ConstraintInstance)*;
		public ParserRule getRule() { return rule; }

		//"invariants" instances+=ConstraintInstance ("," instances+=ConstraintInstance)*
		public Group getGroup() { return cGroup; }

		//"invariants"
		public Keyword getInvariantsKeyword_0() { return cInvariantsKeyword_0; }

		//instances+=ConstraintInstance
		public Assignment getInstancesAssignment_1() { return cInstancesAssignment_1; }

		//ConstraintInstance
		public RuleCall getInstancesConstraintInstanceParserRuleCall_1_0() { return cInstancesConstraintInstanceParserRuleCall_1_0; }

		//("," instances+=ConstraintInstance)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//instances+=ConstraintInstance
		public Assignment getInstancesAssignment_2_1() { return cInstancesAssignment_2_1; }

		//ConstraintInstance
		public RuleCall getInstancesConstraintInstanceParserRuleCall_2_1_0() { return cInstancesConstraintInstanceParserRuleCall_2_1_0; }
	}

	public class OverriddenTypeMetaInfoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OverriddenTypeMetaInfo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMetaInfoAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMetaInfoTypeMetaInfoParserRuleCall_1_0 = (RuleCall)cMetaInfoAssignment_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//OverriddenTypeMetaInfo:
		//	"{" metaInfo=TypeMetaInfo "}";
		public ParserRule getRule() { return rule; }

		//"{" metaInfo=TypeMetaInfo "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//metaInfo=TypeMetaInfo
		public Assignment getMetaInfoAssignment_1() { return cMetaInfoAssignment_1; }

		//TypeMetaInfo
		public RuleCall getMetaInfoTypeMetaInfoParserRuleCall_1_0() { return cMetaInfoTypeMetaInfoParserRuleCall_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class ConstraintInstanceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ConstraintInstance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cConstraintAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cConstraintConstraintCrossReference_0_0 = (CrossReference)cConstraintAssignment_0.eContents().get(0);
		private final RuleCall cConstraintConstraintFQNParserRuleCall_0_0_1 = (RuleCall)cConstraintConstraintCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cParamsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cParamsLiteralParserRuleCall_1_1_0 = (RuleCall)cParamsAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Assignment cParamsAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cParamsLiteralParserRuleCall_1_2_1_0 = (RuleCall)cParamsAssignment_1_2_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//ConstraintInstance:
		//	constraint=[Constraint|FQN] ("(" params+=Literal ("," params+=Literal)* ")")?;
		public ParserRule getRule() { return rule; }

		//constraint=[Constraint|FQN] ("(" params+=Literal ("," params+=Literal)* ")")?
		public Group getGroup() { return cGroup; }

		//constraint=[Constraint|FQN]
		public Assignment getConstraintAssignment_0() { return cConstraintAssignment_0; }

		//[Constraint|FQN]
		public CrossReference getConstraintConstraintCrossReference_0_0() { return cConstraintConstraintCrossReference_0_0; }

		//FQN
		public RuleCall getConstraintConstraintFQNParserRuleCall_0_0_1() { return cConstraintConstraintFQNParserRuleCall_0_0_1; }

		//("(" params+=Literal ("," params+=Literal)* ")")?
		public Group getGroup_1() { return cGroup_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }

		//params+=Literal
		public Assignment getParamsAssignment_1_1() { return cParamsAssignment_1_1; }

		//Literal
		public RuleCall getParamsLiteralParserRuleCall_1_1_0() { return cParamsLiteralParserRuleCall_1_1_0; }

		//("," params+=Literal)*
		public Group getGroup_1_2() { return cGroup_1_2; }

		//","
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }

		//params+=Literal
		public Assignment getParamsAssignment_1_2_1() { return cParamsAssignment_1_2_1; }

		//Literal
		public RuleCall getParamsLiteralParserRuleCall_1_2_1_0() { return cParamsLiteralParserRuleCall_1_2_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }
	}

	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cDocAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cDocDOCTerminalRuleCall_0_0 = (RuleCall)cDocAssignment_0.eContents().get(0);
		private final Keyword cServiceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cMethodsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cMethodsMethodParserRuleCall_4_0 = (RuleCall)cMethodsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Service:
		//	doc=DOC? "service" name=ID "{" methods+=Method* "}";
		public ParserRule getRule() { return rule; }

		//doc=DOC? "service" name=ID "{" methods+=Method* "}"
		public Group getGroup() { return cGroup; }

		//doc=DOC?
		public Assignment getDocAssignment_0() { return cDocAssignment_0; }

		//DOC
		public RuleCall getDocDOCTerminalRuleCall_0_0() { return cDocDOCTerminalRuleCall_0_0; }

		//"service"
		public Keyword getServiceKeyword_1() { return cServiceKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//methods+=Method*
		public Assignment getMethodsAssignment_4() { return cMethodsAssignment_4; }

		//Method
		public RuleCall getMethodsMethodParserRuleCall_4_0() { return cMethodsMethodParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class LiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Literal");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNullLiteralParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBooleanLiteralParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNumberLiteralParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cStringLiteralParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Literal:
		//	NullLiteral | BooleanLiteral | NumberLiteral | StringLiteral;
		public ParserRule getRule() { return rule; }

		//NullLiteral | BooleanLiteral | NumberLiteral | StringLiteral
		public Alternatives getAlternatives() { return cAlternatives; }

		//NullLiteral
		public RuleCall getNullLiteralParserRuleCall_0() { return cNullLiteralParserRuleCall_0; }

		//BooleanLiteral
		public RuleCall getBooleanLiteralParserRuleCall_1() { return cBooleanLiteralParserRuleCall_1; }

		//NumberLiteral
		public RuleCall getNumberLiteralParserRuleCall_2() { return cNumberLiteralParserRuleCall_2; }

		//StringLiteral
		public RuleCall getStringLiteralParserRuleCall_3() { return cStringLiteralParserRuleCall_3; }
	}

	public class FQNElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FQN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//FQN:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class FQNWithWildcardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FQNWithWildcard");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cFQNParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAsteriskKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//FQNWithWildcard:
		//	FQN "." "*";
		public ParserRule getRule() { return rule; }

		//FQN "." "*"
		public Group getGroup() { return cGroup; }

		//FQN
		public RuleCall getFQNParserRuleCall_0() { return cFQNParserRuleCall_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//"*"
		public Keyword getAsteriskKeyword_2() { return cAsteriskKeyword_2; }
	}

	public class BooleanLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BooleanLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBooleanLiteralAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Alternatives cValueAlternatives_1_0 = (Alternatives)cValueAssignment_1.eContents().get(0);
		private final Keyword cValueFalseKeyword_1_0_0 = (Keyword)cValueAlternatives_1_0.eContents().get(0);
		private final Keyword cValueTrueKeyword_1_0_1 = (Keyword)cValueAlternatives_1_0.eContents().get(1);
		
		//BooleanLiteral:
		//	{BooleanLiteral} value=("false" | "true");
		public ParserRule getRule() { return rule; }

		//{BooleanLiteral} value=("false" | "true")
		public Group getGroup() { return cGroup; }

		//{BooleanLiteral}
		public Action getBooleanLiteralAction_0() { return cBooleanLiteralAction_0; }

		//value=("false" | "true")
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//"false" | "true"
		public Alternatives getValueAlternatives_1_0() { return cValueAlternatives_1_0; }

		//"false"
		public Keyword getValueFalseKeyword_1_0_0() { return cValueFalseKeyword_1_0_0; }

		//"true"
		public Keyword getValueTrueKeyword_1_0_1() { return cValueTrueKeyword_1_0_1; }
	}

	public class NullLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NullLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNullLiteralAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cValueNullKeyword_1_0 = (Keyword)cValueAssignment_1.eContents().get(0);
		
		//NullLiteral:
		//	{NullLiteral} value="null";
		public ParserRule getRule() { return rule; }

		//{NullLiteral} value="null"
		public Group getGroup() { return cGroup; }

		//{NullLiteral}
		public Action getNullLiteralAction_0() { return cNullLiteralAction_0; }

		//value="null"
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//"null"
		public Keyword getValueNullKeyword_1_0() { return cValueNullKeyword_1_0; }
	}

	public class NumberLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NumberLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cNumberLiteralAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueNumberParserRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//NumberLiteral:
		//	{NumberLiteral} value=Number;
		public ParserRule getRule() { return rule; }

		//{NumberLiteral} value=Number
		public Group getGroup() { return cGroup; }

		//{NumberLiteral}
		public Action getNumberLiteralAction_0() { return cNumberLiteralAction_0; }

		//value=Number
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//Number
		public RuleCall getValueNumberParserRuleCall_1_0() { return cValueNumberParserRuleCall_1_0; }
	}

	public class StringLiteralElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StringLiteral");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStringLiteralAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//StringLiteral:
		//	{StringLiteral} value=STRING;
		public ParserRule getRule() { return rule; }

		//{StringLiteral} value=STRING
		public Group getGroup() { return cGroup; }

		//{StringLiteral}
		public Action getStringLiteralAction_0() { return cStringLiteralAction_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }
	}

	public class NumberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Number");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cHEXTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1_0_0 = (RuleCall)cAlternatives_1_0.eContents().get(0);
		private final RuleCall cDECIMALTerminalRuleCall_1_0_1 = (RuleCall)cAlternatives_1_0.eContents().get(1);
		private final Group cGroup_1_1 = (Group)cGroup_1.eContents().get(1);
		private final Keyword cFullStopKeyword_1_1_0 = (Keyword)cGroup_1_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1_1 = (Alternatives)cGroup_1_1.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_1_1_1_0 = (RuleCall)cAlternatives_1_1_1.eContents().get(0);
		private final RuleCall cDECIMALTerminalRuleCall_1_1_1_1 = (RuleCall)cAlternatives_1_1_1.eContents().get(1);
		
		//Number hidden():
		//	HEX | (INT | DECIMAL) ("." (INT | DECIMAL))?;
		public ParserRule getRule() { return rule; }

		//HEX | (INT | DECIMAL) ("." (INT | DECIMAL))?
		public Alternatives getAlternatives() { return cAlternatives; }

		//HEX
		public RuleCall getHEXTerminalRuleCall_0() { return cHEXTerminalRuleCall_0; }

		//(INT | DECIMAL) ("." (INT | DECIMAL))?
		public Group getGroup_1() { return cGroup_1; }

		//INT | DECIMAL
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1_0_0() { return cINTTerminalRuleCall_1_0_0; }

		//DECIMAL
		public RuleCall getDECIMALTerminalRuleCall_1_0_1() { return cDECIMALTerminalRuleCall_1_0_1; }

		//("." (INT | DECIMAL))?
		public Group getGroup_1_1() { return cGroup_1_1; }

		//"."
		public Keyword getFullStopKeyword_1_1_0() { return cFullStopKeyword_1_1_0; }

		//INT | DECIMAL
		public Alternatives getAlternatives_1_1_1() { return cAlternatives_1_1_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_1_1_1_0() { return cINTTerminalRuleCall_1_1_1_0; }

		//DECIMAL
		public RuleCall getDECIMALTerminalRuleCall_1_1_1_1() { return cDECIMALTerminalRuleCall_1_1_1_1; }
	}
	
	
	private final DomainModelElements pDomainModel;
	private final ContextElements pContext;
	private final NamespaceElements pNamespace;
	private final ImportElements pImport;
	private final AbstractElementElements pAbstractElement;
	private final TypeElements pType;
	private final InternalTypeElements pInternalType;
	private final AbstractVOElements pAbstractVO;
	private final AbstractEntityIdElements pAbstractEntityId;
	private final AbstractEntityElements pAbstractEntity;
	private final ConstraintTargetElements pConstraintTarget;
	private final ExternalTypeElements pExternalType;
	private final ConstraintElements pConstraint;
	private final ExceptionElements pException;
	private final ValueObjectElements pValueObject;
	private final EntityIdElements pEntityId;
	private final AggregateIdElements pAggregateId;
	private final EnumObjectElements pEnumObject;
	private final EnumInstanceElements pEnumInstance;
	private final EventElements pEvent;
	private final EntityElements pEntity;
	private final AggregateElements pAggregate;
	private final AbstractMethodElements pAbstractMethod;
	private final ConstructorElements pConstructor;
	private final ReturnTypeElements pReturnType;
	private final MethodElements pMethod;
	private final TypeMetaInfoElements pTypeMetaInfo;
	private final VariableElements pVariable;
	private final InvariantsElements pInvariants;
	private final OverriddenTypeMetaInfoElements pOverriddenTypeMetaInfo;
	private final ConstraintInstanceElements pConstraintInstance;
	private final ServiceElements pService;
	private final LiteralElements pLiteral;
	private final FQNElements pFQN;
	private final FQNWithWildcardElements pFQNWithWildcard;
	private final BooleanLiteralElements pBooleanLiteral;
	private final NullLiteralElements pNullLiteral;
	private final NumberLiteralElements pNumberLiteral;
	private final StringLiteralElements pStringLiteral;
	private final TerminalRule tID;
	private final TerminalRule tSTRING;
	private final NumberElements pNumber;
	private final TerminalRule tHEX;
	private final TerminalRule tINT;
	private final TerminalRule tDECIMAL;
	private final TerminalRule tDOC;
	private final TerminalRule tML_COMMENT;
	private final TerminalRule tSL_COMMENT;
	private final TerminalRule tWS;
	
	private final Grammar grammar;

	@Inject
	public DomainDrivenDesignDslGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pDomainModel = new DomainModelElements();
		this.pContext = new ContextElements();
		this.pNamespace = new NamespaceElements();
		this.pImport = new ImportElements();
		this.pAbstractElement = new AbstractElementElements();
		this.pType = new TypeElements();
		this.pInternalType = new InternalTypeElements();
		this.pAbstractVO = new AbstractVOElements();
		this.pAbstractEntityId = new AbstractEntityIdElements();
		this.pAbstractEntity = new AbstractEntityElements();
		this.pConstraintTarget = new ConstraintTargetElements();
		this.pExternalType = new ExternalTypeElements();
		this.pConstraint = new ConstraintElements();
		this.pException = new ExceptionElements();
		this.pValueObject = new ValueObjectElements();
		this.pEntityId = new EntityIdElements();
		this.pAggregateId = new AggregateIdElements();
		this.pEnumObject = new EnumObjectElements();
		this.pEnumInstance = new EnumInstanceElements();
		this.pEvent = new EventElements();
		this.pEntity = new EntityElements();
		this.pAggregate = new AggregateElements();
		this.pAbstractMethod = new AbstractMethodElements();
		this.pConstructor = new ConstructorElements();
		this.pReturnType = new ReturnTypeElements();
		this.pMethod = new MethodElements();
		this.pTypeMetaInfo = new TypeMetaInfoElements();
		this.pVariable = new VariableElements();
		this.pInvariants = new InvariantsElements();
		this.pOverriddenTypeMetaInfo = new OverriddenTypeMetaInfoElements();
		this.pConstraintInstance = new ConstraintInstanceElements();
		this.pService = new ServiceElements();
		this.pLiteral = new LiteralElements();
		this.pFQN = new FQNElements();
		this.pFQNWithWildcard = new FQNWithWildcardElements();
		this.pBooleanLiteral = new BooleanLiteralElements();
		this.pNullLiteral = new NullLiteralElements();
		this.pNumberLiteral = new NumberLiteralElements();
		this.pStringLiteral = new StringLiteralElements();
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "STRING");
		this.pNumber = new NumberElements();
		this.tHEX = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "HEX");
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "INT");
		this.tDECIMAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DECIMAL");
		this.tDOC = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DOC");
		this.tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ML_COMMENT");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.fuin.dsl.ddd.DomainDrivenDesignDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//DomainModel:
	//	contexts+=Context*;
	public DomainModelElements getDomainModelAccess() {
		return pDomainModel;
	}
	
	public ParserRule getDomainModelRule() {
		return getDomainModelAccess().getRule();
	}

	//Context:
	//	"context" name=ID "{" namespaces+=Namespace* "}";
	public ContextElements getContextAccess() {
		return pContext;
	}
	
	public ParserRule getContextRule() {
		return getContextAccess().getRule();
	}

	//Namespace:
	//	"namespace" name=FQN "{" imports+=Import* elements+=AbstractElement* "}";
	public NamespaceElements getNamespaceAccess() {
		return pNamespace;
	}
	
	public ParserRule getNamespaceRule() {
		return getNamespaceAccess().getRule();
	}

	//Import:
	//	"import" importedNamespace=(FQN | FQNWithWildcard);
	public ImportElements getImportAccess() {
		return pImport;
	}
	
	public ParserRule getImportRule() {
		return getImportAccess().getRule();
	}

	//AbstractElement:
	//	Constraint | Type | Exception | Event;
	public AbstractElementElements getAbstractElementAccess() {
		return pAbstractElement;
	}
	
	public ParserRule getAbstractElementRule() {
		return getAbstractElementAccess().getRule();
	}

	//Type:
	//	ExternalType | InternalType | Service;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}

	//InternalType:
	//	AbstractVO | AbstractEntity | EnumObject;
	public InternalTypeElements getInternalTypeAccess() {
		return pInternalType;
	}
	
	public ParserRule getInternalTypeRule() {
		return getInternalTypeAccess().getRule();
	}

	//AbstractVO:
	//	ValueObject | AbstractEntityId;
	public AbstractVOElements getAbstractVOAccess() {
		return pAbstractVO;
	}
	
	public ParserRule getAbstractVORule() {
		return getAbstractVOAccess().getRule();
	}

	//AbstractEntityId:
	//	EntityId | AggregateId;
	public AbstractEntityIdElements getAbstractEntityIdAccess() {
		return pAbstractEntityId;
	}
	
	public ParserRule getAbstractEntityIdRule() {
		return getAbstractEntityIdAccess().getRule();
	}

	//AbstractEntity:
	//	Entity | Aggregate;
	public AbstractEntityElements getAbstractEntityAccess() {
		return pAbstractEntity;
	}
	
	public ParserRule getAbstractEntityRule() {
		return getAbstractEntityAccess().getRule();
	}

	//ConstraintTarget:
	//	ExternalType | AbstractVO;
	public ConstraintTargetElements getConstraintTargetAccess() {
		return pConstraintTarget;
	}
	
	public ParserRule getConstraintTargetRule() {
		return getConstraintTargetAccess().getRule();
	}

	//ExternalType:
	//	doc=DOC? "type" element="element"? name=ID;
	public ExternalTypeElements getExternalTypeAccess() {
		return pExternalType;
	}
	
	public ParserRule getExternalTypeRule() {
		return getExternalTypeAccess().getRule();
	}

	//Constraint:
	//	doc=DOC? "constraint" name=ID ("on" target=[ConstraintTarget|FQN])? ("exception" exception=[Exception|FQN])? "{"
	//	variables+=Variable* ("message" message=STRING)? "}";
	public ConstraintElements getConstraintAccess() {
		return pConstraint;
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}

	//Exception:
	//	doc=DOC? "exception" name=ID ("cid" cid=INT)? "{" variables+=Variable* "message" message=STRING "}";
	public ExceptionElements getExceptionAccess() {
		return pException;
	}
	
	public ParserRule getExceptionRule() {
		return getExceptionAccess().getRule();
	}

	//ValueObject:
	//	doc=DOC? "value-object" name=ID ("base" base=[ExternalType|FQN])? "{" metaInfo=TypeMetaInfo variables+=Variable*
	//	constructors+=Constructor* methods+=Method* "}";
	public ValueObjectElements getValueObjectAccess() {
		return pValueObject;
	}
	
	public ParserRule getValueObjectRule() {
		return getValueObjectAccess().getRule();
	}

	//EntityId:
	//	doc=DOC? "entity-id" name=ID "identifies" entity=[Entity|FQN] ("base" base=[ExternalType|FQN])? "{"
	//	metaInfo=TypeMetaInfo variables+=Variable* constructors+=Constructor* methods+=Method* "}";
	public EntityIdElements getEntityIdAccess() {
		return pEntityId;
	}
	
	public ParserRule getEntityIdRule() {
		return getEntityIdAccess().getRule();
	}

	//AggregateId:
	//	doc=DOC? "aggregate-id" name=ID "identifies" entity=[Aggregate|FQN] ("base" base=[ExternalType|FQN])? "{"
	//	metaInfo=TypeMetaInfo variables+=Variable* constructors+=Constructor* methods+=Method* "}";
	public AggregateIdElements getAggregateIdAccess() {
		return pAggregateId;
	}
	
	public ParserRule getAggregateIdRule() {
		return getAggregateIdAccess().getRule();
	}

	//EnumObject:
	//	doc=DOC? "enum" name=ID ("base" base=[ExternalType|FQN])? "{" metaInfo=TypeMetaInfo variables+=Variable* "instances"
	//	"{" instances+=EnumInstance+ "}" "}";
	public EnumObjectElements getEnumObjectAccess() {
		return pEnumObject;
	}
	
	public ParserRule getEnumObjectRule() {
		return getEnumObjectAccess().getRule();
	}

	//EnumInstance:
	//	doc=DOC? deprecated="deprecated"? name=ID ("(" params+=Literal ("," params+=Literal)* ")")?;
	public EnumInstanceElements getEnumInstanceAccess() {
		return pEnumInstance;
	}
	
	public ParserRule getEnumInstanceRule() {
		return getEnumInstanceAccess().getRule();
	}

	//Event:
	//	doc=DOC? "event" name=ID "{" variables+=Variable* ("message" message=STRING)? "}";
	public EventElements getEventAccess() {
		return pEvent;
	}
	
	public ParserRule getEventRule() {
		return getEventAccess().getRule();
	}

	//Entity:
	//	doc=DOC? "entity" name=ID "identifier" idType=[EntityId|FQN] "root" root=[Aggregate|FQN] "{" metaInfo=TypeMetaInfo
	//	variables+=Variable* constructors+=Constructor* methods+=Method* events+=Event* "}";
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//Aggregate:
	//	doc=DOC? "aggregate" name=ID "identifier" idType=[AggregateId|FQN] "{" metaInfo=TypeMetaInfo variables+=Variable*
	//	constructors+=Constructor* methods+=Method* events+=Event* "}";
	public AggregateElements getAggregateAccess() {
		return pAggregate;
	}
	
	public ParserRule getAggregateRule() {
		return getAggregateAccess().getRule();
	}

	//AbstractMethod:
	//	Constructor | Method;
	public AbstractMethodElements getAbstractMethodAccess() {
		return pAbstractMethod;
	}
	
	public ParserRule getAbstractMethodRule() {
		return getAbstractMethodAccess().getRule();
	}

	//Constructor:
	//	doc=DOC? "constructor" name=ID ("constraints" constraintCalls+=ConstraintInstance (","
	//	constraintCalls+=ConstraintInstance)*)? ("fires" firedEvents+=[Event|FQN] ("," firedEvents+=[Event|FQN])*)? "{"
	//	variables+=Variable* service=[Service|FQN]? services+=Service* events+=Event* "}";
	public ConstructorElements getConstructorAccess() {
		return pConstructor;
	}
	
	public ParserRule getConstructorRule() {
		return getConstructorAccess().getRule();
	}

	//ReturnType:
	//	doc=DOC? "returns" type=[Type|FQN];
	public ReturnTypeElements getReturnTypeAccess() {
		return pReturnType;
	}
	
	public ParserRule getReturnTypeRule() {
		return getReturnTypeAccess().getRule();
	}

	//Method:
	//	doc=DOC? "method" name=ID ("ref" refMethod=[Method|FQN])? ("constraints" constraintCalls+=ConstraintInstance (","
	//	constraintCalls+=ConstraintInstance)*)? ("fires" firedEvents+=[Event|FQN] ("," firedEvents+=[Event|FQN])*)? "{"
	//	variables+=Variable* service=[Service|FQN]? returnType=ReturnType? services+=Service* events+=Event* "}";
	public MethodElements getMethodAccess() {
		return pMethod;
	}
	
	public ParserRule getMethodRule() {
		return getMethodAccess().getRule();
	}

	//TypeMetaInfo:
	//	{TypeMetaInfo} ("slabel" slabel=STRING)? ("label" label=STRING)? ("tooltip" tooltip=STRING)? ("prompt" prompt=STRING)?
	//	("examples" examples+=Literal*)?;
	public TypeMetaInfoElements getTypeMetaInfoAccess() {
		return pTypeMetaInfo;
	}
	
	public ParserRule getTypeMetaInfoRule() {
		return getTypeMetaInfoAccess().getRule();
	}

	//Variable:
	//	doc=DOC? nullable="nullable"? type=[Type|FQN] multiplicity="*"? name=ID invariants=Invariants?
	//	overridden=OverriddenTypeMetaInfo?;
	public VariableElements getVariableAccess() {
		return pVariable;
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}

	//Invariants:
	//	"invariants" instances+=ConstraintInstance ("," instances+=ConstraintInstance)*;
	public InvariantsElements getInvariantsAccess() {
		return pInvariants;
	}
	
	public ParserRule getInvariantsRule() {
		return getInvariantsAccess().getRule();
	}

	//OverriddenTypeMetaInfo:
	//	"{" metaInfo=TypeMetaInfo "}";
	public OverriddenTypeMetaInfoElements getOverriddenTypeMetaInfoAccess() {
		return pOverriddenTypeMetaInfo;
	}
	
	public ParserRule getOverriddenTypeMetaInfoRule() {
		return getOverriddenTypeMetaInfoAccess().getRule();
	}

	//ConstraintInstance:
	//	constraint=[Constraint|FQN] ("(" params+=Literal ("," params+=Literal)* ")")?;
	public ConstraintInstanceElements getConstraintInstanceAccess() {
		return pConstraintInstance;
	}
	
	public ParserRule getConstraintInstanceRule() {
		return getConstraintInstanceAccess().getRule();
	}

	//Service:
	//	doc=DOC? "service" name=ID "{" methods+=Method* "}";
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}

	//Literal:
	//	NullLiteral | BooleanLiteral | NumberLiteral | StringLiteral;
	public LiteralElements getLiteralAccess() {
		return pLiteral;
	}
	
	public ParserRule getLiteralRule() {
		return getLiteralAccess().getRule();
	}

	//FQN:
	//	ID ("." ID)*;
	public FQNElements getFQNAccess() {
		return pFQN;
	}
	
	public ParserRule getFQNRule() {
		return getFQNAccess().getRule();
	}

	//FQNWithWildcard:
	//	FQN "." "*";
	public FQNWithWildcardElements getFQNWithWildcardAccess() {
		return pFQNWithWildcard;
	}
	
	public ParserRule getFQNWithWildcardRule() {
		return getFQNWithWildcardAccess().getRule();
	}

	//BooleanLiteral:
	//	{BooleanLiteral} value=("false" | "true");
	public BooleanLiteralElements getBooleanLiteralAccess() {
		return pBooleanLiteral;
	}
	
	public ParserRule getBooleanLiteralRule() {
		return getBooleanLiteralAccess().getRule();
	}

	//NullLiteral:
	//	{NullLiteral} value="null";
	public NullLiteralElements getNullLiteralAccess() {
		return pNullLiteral;
	}
	
	public ParserRule getNullLiteralRule() {
		return getNullLiteralAccess().getRule();
	}

	//NumberLiteral:
	//	{NumberLiteral} value=Number;
	public NumberLiteralElements getNumberLiteralAccess() {
		return pNumberLiteral;
	}
	
	public ParserRule getNumberLiteralRule() {
		return getNumberLiteralAccess().getRule();
	}

	//StringLiteral:
	//	{StringLiteral} value=STRING;
	public StringLiteralElements getStringLiteralAccess() {
		return pStringLiteral;
	}
	
	public ParserRule getStringLiteralRule() {
		return getStringLiteralAccess().getRule();
	}

	//terminal ID:
	//	("A".."Z" | "a".."z") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return tID;
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	} 

	//Number hidden():
	//	HEX | (INT | DECIMAL) ("." (INT | DECIMAL))?;
	public NumberElements getNumberAccess() {
		return pNumber;
	}
	
	public ParserRule getNumberRule() {
		return getNumberAccess().getRule();
	}

	//terminal HEX:
	//	("0x" | "0X") ("0".."9" | "a".."f" | "A".."F" | "_")+ ("#" (("b" | "B") ("i" | "I") | ("l" | "L")))?;
	public TerminalRule getHEXRule() {
		return tHEX;
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9" ("0".."9" | "_")*;
	public TerminalRule getINTRule() {
		return tINT;
	} 

	//terminal DECIMAL:
	//	INT (("e" | "E") ("+" | "-")? INT)? (("b" | "B") ("i" | "I" | "d" | "D") | ("l" | "L" | "d" | "D" | "f" | "F"))?;
	public TerminalRule getDECIMALRule() {
		return tDECIMAL;
	} 

	//// Documentation
	//terminal DOC:
	//	"/ **"->"* /";
	public TerminalRule getDOCRule() {
		return tDOC;
	} 

	//// Multi line comment		 
	//terminal ML_COMMENT:
	//	"/ *" !"*"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return tML_COMMENT;
	} 

	//// Single line comment
	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	} 

	//// Whitespace - Anything that is ignored.
	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return tWS;
	} 
}
