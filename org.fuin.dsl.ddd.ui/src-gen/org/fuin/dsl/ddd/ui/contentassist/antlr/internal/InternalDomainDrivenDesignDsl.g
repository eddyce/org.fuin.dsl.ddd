/*
* generated by Xtext
*/
grammar InternalDomainDrivenDesignDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.fuin.dsl.ddd.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.fuin.dsl.ddd.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.fuin.dsl.ddd.services.DomainDrivenDesignDslGrammarAccess;

}

@parser::members {
 
 	private DomainDrivenDesignDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DomainDrivenDesignDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleDomainModel
entryRuleDomainModel 
:
{ before(grammarAccess.getDomainModelRule()); }
	 ruleDomainModel
{ after(grammarAccess.getDomainModelRule()); } 
	 EOF 
;

// Rule DomainModel
ruleDomainModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDomainModelAccess().getNamespaceAssignment()); }
(rule__DomainModel__NamespaceAssignment)
{ after(grammarAccess.getDomainModelAccess().getNamespaceAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespace
entryRuleNamespace 
:
{ before(grammarAccess.getNamespaceRule()); }
	 ruleNamespace
{ after(grammarAccess.getNamespaceRule()); } 
	 EOF 
;

// Rule Namespace
ruleNamespace
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceAccess().getGroup()); }
(rule__Namespace__Group__0)
{ after(grammarAccess.getNamespaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractElement
entryRuleAbstractElement 
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
(rule__AbstractElement__Alternatives)
{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractVO
entryRuleAbstractVO 
:
{ before(grammarAccess.getAbstractVORule()); }
	 ruleAbstractVO
{ after(grammarAccess.getAbstractVORule()); } 
	 EOF 
;

// Rule AbstractVO
ruleAbstractVO
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractVOAccess().getAlternatives()); }
(rule__AbstractVO__Alternatives)
{ after(grammarAccess.getAbstractVOAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractEntity
entryRuleAbstractEntity 
:
{ before(grammarAccess.getAbstractEntityRule()); }
	 ruleAbstractEntity
{ after(grammarAccess.getAbstractEntityRule()); } 
	 EOF 
;

// Rule AbstractEntity
ruleAbstractEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractEntityAccess().getAlternatives()); }
(rule__AbstractEntity__Alternatives)
{ after(grammarAccess.getAbstractEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleExternalType
entryRuleExternalType 
:
{ before(grammarAccess.getExternalTypeRule()); }
	 ruleExternalType
{ after(grammarAccess.getExternalTypeRule()); } 
	 EOF 
;

// Rule ExternalType
ruleExternalType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExternalTypeAccess().getGroup()); }
(rule__ExternalType__Group__0)
{ after(grammarAccess.getExternalTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraint
entryRuleConstraint 
:
{ before(grammarAccess.getConstraintRule()); }
	 ruleConstraint
{ after(grammarAccess.getConstraintRule()); } 
	 EOF 
;

// Rule Constraint
ruleConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintAccess().getGroup()); }
(rule__Constraint__Group__0)
{ after(grammarAccess.getConstraintAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueObject
entryRuleValueObject 
:
{ before(grammarAccess.getValueObjectRule()); }
	 ruleValueObject
{ after(grammarAccess.getValueObjectRule()); } 
	 EOF 
;

// Rule ValueObject
ruleValueObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueObjectAccess().getGroup()); }
(rule__ValueObject__Group__0)
{ after(grammarAccess.getValueObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumObject
entryRuleEnumObject 
:
{ before(grammarAccess.getEnumObjectRule()); }
	 ruleEnumObject
{ after(grammarAccess.getEnumObjectRule()); } 
	 EOF 
;

// Rule EnumObject
ruleEnumObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumObjectAccess().getGroup()); }
(rule__EnumObject__Group__0)
{ after(grammarAccess.getEnumObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumInstance
entryRuleEnumInstance 
:
{ before(grammarAccess.getEnumInstanceRule()); }
	 ruleEnumInstance
{ after(grammarAccess.getEnumInstanceRule()); } 
	 EOF 
;

// Rule EnumInstance
ruleEnumInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumInstanceAccess().getGroup()); }
(rule__EnumInstance__Group__0)
{ after(grammarAccess.getEnumInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAggregate
entryRuleAggregate 
:
{ before(grammarAccess.getAggregateRule()); }
	 ruleAggregate
{ after(grammarAccess.getAggregateRule()); } 
	 EOF 
;

// Rule Aggregate
ruleAggregate
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAggregateAccess().getGroup()); }
(rule__Aggregate__Group__0)
{ after(grammarAccess.getAggregateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructor
entryRuleConstructor 
:
{ before(grammarAccess.getConstructorRule()); }
	 ruleConstructor
{ after(grammarAccess.getConstructorRule()); } 
	 EOF 
;

// Rule Constructor
ruleConstructor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstructorAccess().getGroup()); }
(rule__Constructor__Group__0)
{ after(grammarAccess.getConstructorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethod
entryRuleMethod 
:
{ before(grammarAccess.getMethodRule()); }
	 ruleMethod
{ after(grammarAccess.getMethodRule()); } 
	 EOF 
;

// Rule Method
ruleMethod
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodAccess().getGroup()); }
(rule__Method__Group__0)
{ after(grammarAccess.getMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEvent
entryRuleEvent 
:
{ before(grammarAccess.getEventRule()); }
	 ruleEvent
{ after(grammarAccess.getEventRule()); } 
	 EOF 
;

// Rule Event
ruleEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEventAccess().getGroup()); }
(rule__Event__Group__0)
{ after(grammarAccess.getEventAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeMetaInfo
entryRuleTypeMetaInfo 
:
{ before(grammarAccess.getTypeMetaInfoRule()); }
	 ruleTypeMetaInfo
{ after(grammarAccess.getTypeMetaInfoRule()); } 
	 EOF 
;

// Rule TypeMetaInfo
ruleTypeMetaInfo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getGroup()); }
(rule__TypeMetaInfo__Group__0)
{ after(grammarAccess.getTypeMetaInfoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraints
entryRuleConstraints 
:
{ before(grammarAccess.getConstraintsRule()); }
	 ruleConstraints
{ after(grammarAccess.getConstraintsRule()); } 
	 EOF 
;

// Rule Constraints
ruleConstraints
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintsAccess().getGroup()); }
(rule__Constraints__Group__0)
{ after(grammarAccess.getConstraintsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInvariants
entryRuleInvariants 
:
{ before(grammarAccess.getInvariantsRule()); }
	 ruleInvariants
{ after(grammarAccess.getInvariantsRule()); } 
	 EOF 
;

// Rule Invariants
ruleInvariants
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInvariantsAccess().getGroup()); }
(rule__Invariants__Group__0)
{ after(grammarAccess.getInvariantsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOverriddenTypeMetaInfo
entryRuleOverriddenTypeMetaInfo 
:
{ before(grammarAccess.getOverriddenTypeMetaInfoRule()); }
	 ruleOverriddenTypeMetaInfo
{ after(grammarAccess.getOverriddenTypeMetaInfoRule()); } 
	 EOF 
;

// Rule OverriddenTypeMetaInfo
ruleOverriddenTypeMetaInfo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOverriddenTypeMetaInfoAccess().getGroup()); }
(rule__OverriddenTypeMetaInfo__Group__0)
{ after(grammarAccess.getOverriddenTypeMetaInfoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessage
entryRuleMessage 
:
{ before(grammarAccess.getMessageRule()); }
	 ruleMessage
{ after(grammarAccess.getMessageRule()); } 
	 EOF 
;

// Rule Message
ruleMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageAccess().getGroup()); }
(rule__Message__Group__0)
{ after(grammarAccess.getMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstraintCall
entryRuleConstraintCall 
:
{ before(grammarAccess.getConstraintCallRule()); }
	 ruleConstraintCall
{ after(grammarAccess.getConstraintCallRule()); } 
	 EOF 
;

// Rule ConstraintCall
ruleConstraintCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstraintCallAccess().getGroup()); }
(rule__ConstraintCall__Group__0)
{ after(grammarAccess.getConstraintCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQN
entryRuleFQN 
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNAccess().getGroup()); }
(rule__FQN__Group__0)
{ after(grammarAccess.getFQNAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFQNWithWildcard
entryRuleFQNWithWildcard 
:
{ before(grammarAccess.getFQNWithWildcardRule()); }
	 ruleFQNWithWildcard
{ after(grammarAccess.getFQNWithWildcardRule()); } 
	 EOF 
;

// Rule FQNWithWildcard
ruleFQNWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFQNWithWildcardAccess().getGroup()); }
(rule__FQNWithWildcard__Group__0)
{ after(grammarAccess.getFQNWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral 
:
{ before(grammarAccess.getBooleanLiteralRule()); }
	 ruleBooleanLiteral
{ after(grammarAccess.getBooleanLiteralRule()); } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralAccess().getGroup()); }
(rule__BooleanLiteral__Group__0)
{ after(grammarAccess.getBooleanLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullLiteral
entryRuleNullLiteral 
:
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullLiteralAccess().getGroup()); }
(rule__NullLiteral__Group__0)
{ after(grammarAccess.getNullLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberLiteral
entryRuleNumberLiteral 
:
{ before(grammarAccess.getNumberLiteralRule()); }
	 ruleNumberLiteral
{ after(grammarAccess.getNumberLiteralRule()); } 
	 EOF 
;

// Rule NumberLiteral
ruleNumberLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberLiteralAccess().getGroup()); }
(rule__NumberLiteral__Group__0)
{ after(grammarAccess.getNumberLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteral
entryRuleStringLiteral 
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralAccess().getGroup()); }
(rule__StringLiteral__Group__0)
{ after(grammarAccess.getStringLiteralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Number
ruleNumber
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getAlternatives()); }
(rule__Number__Alternatives)
{ after(grammarAccess.getNumberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}




rule__Import__ImportedNamespaceAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceFQNParserRuleCall_1_0_0()); }
	ruleFQN
{ after(grammarAccess.getImportAccess().getImportedNamespaceFQNParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getImportAccess().getImportedNamespaceFQNWithWildcardParserRuleCall_1_0_1()); }
	ruleFQNWithWildcard
{ after(grammarAccess.getImportAccess().getImportedNamespaceFQNWithWildcardParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementAccess().getConstraintParserRuleCall_0()); }
	ruleConstraint
{ after(grammarAccess.getAbstractElementAccess().getConstraintParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_1()); }
	ruleType
{ after(grammarAccess.getAbstractElementAccess().getTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getExternalTypeParserRuleCall_0()); }
	ruleExternalType
{ after(grammarAccess.getTypeAccess().getExternalTypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getAbstractVOParserRuleCall_1()); }
	ruleAbstractVO
{ after(grammarAccess.getTypeAccess().getAbstractVOParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getAbstractEntityParserRuleCall_2()); }
	ruleAbstractEntity
{ after(grammarAccess.getTypeAccess().getAbstractEntityParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractVO__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractVOAccess().getValueObjectParserRuleCall_0()); }
	ruleValueObject
{ after(grammarAccess.getAbstractVOAccess().getValueObjectParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractVOAccess().getEnumObjectParserRuleCall_1()); }
	ruleEnumObject
{ after(grammarAccess.getAbstractVOAccess().getEnumObjectParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractEntity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractEntityAccess().getEntityParserRuleCall_0()); }
	ruleEntity
{ after(grammarAccess.getAbstractEntityAccess().getEntityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractEntityAccess().getAggregateParserRuleCall_1()); }
	ruleAggregate
{ after(grammarAccess.getAbstractEntityAccess().getAggregateParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getOverriddenAssignment_9_0()); }
(rule__Variable__OverriddenAssignment_9_0)?
{ after(grammarAccess.getVariableAccess().getOverriddenAssignment_9_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getSemicolonKeyword_9_1()); }

	';' 

{ after(grammarAccess.getVariableAccess().getSemicolonKeyword_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_0()); }
	ruleNullLiteral
{ after(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); }
	ruleBooleanLiteral
{ after(grammarAccess.getLiteralAccess().getBooleanLiteralParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_2()); }
	ruleNumberLiteral
{ after(grammarAccess.getLiteralAccess().getNumberLiteralParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
	ruleStringLiteral
{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueFalseKeyword_1_0_0()); }

	'false' 

{ after(grammarAccess.getBooleanLiteralAccess().getValueFalseKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_1()); }

	'true' 

{ after(grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
	RULE_HEX
{ after(grammarAccess.getNumberAccess().getHEXTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getGroup_1()); }
(rule__Number__Group_1__0)
{ after(grammarAccess.getNumberAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Alternatives_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
	RULE_INT
{ after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1_1_1_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
	RULE_DECIMAL
{ after(grammarAccess.getNumberAccess().getDECIMALTerminalRuleCall_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Namespace__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__0__Impl
	rule__Namespace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getNamespaceKeyword_0()); }

	'namespace' 

{ after(grammarAccess.getNamespaceAccess().getNamespaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__1__Impl
	rule__Namespace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getNameAssignment_1()); }
(rule__Namespace__NameAssignment_1)
{ after(grammarAccess.getNamespaceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__2__Impl
	rule__Namespace__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getNamespaceAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__3__Impl
	rule__Namespace__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getImportsAssignment_3()); }
(rule__Namespace__ImportsAssignment_3)*
{ after(grammarAccess.getNamespaceAccess().getImportsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__4__Impl
	rule__Namespace__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getElementsAssignment_4()); }
(rule__Namespace__ElementsAssignment_4)*
{ after(grammarAccess.getNamespaceAccess().getElementsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Namespace__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Namespace__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getNamespaceAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
(rule__Import__ImportedNamespaceAssignment_1)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExternalType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalType__Group__0__Impl
	rule__ExternalType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalTypeAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getExternalTypeAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalType__Group__1__Impl
	rule__ExternalType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalTypeAccess().getNameAssignment_1()); }
(rule__ExternalType__NameAssignment_1)
{ after(grammarAccess.getExternalTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExternalType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalTypeAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getExternalTypeAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Constraint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__0__Impl
	rule__Constraint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getDocAssignment_0()); }
(rule__Constraint__DocAssignment_0)
{ after(grammarAccess.getConstraintAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__1__Impl
	rule__Constraint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getConstraintKeyword_1()); }

	'constraint' 

{ after(grammarAccess.getConstraintAccess().getConstraintKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__2__Impl
	rule__Constraint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getNameAssignment_2()); }
(rule__Constraint__NameAssignment_2)
{ after(grammarAccess.getConstraintAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__3__Impl
	rule__Constraint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getOnKeyword_3()); }

	'on' 

{ after(grammarAccess.getConstraintAccess().getOnKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__4__Impl
	rule__Constraint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getTargetAssignment_4()); }
(rule__Constraint__TargetAssignment_4)
{ after(grammarAccess.getConstraintAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__5__Impl
	rule__Constraint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getGroup_5()); }
(rule__Constraint__Group_5__0)?
{ after(grammarAccess.getConstraintAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__6__Impl
	rule__Constraint__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_6()); }

	'{' 

{ after(grammarAccess.getConstraintAccess().getLeftCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__7__Impl
	rule__Constraint__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getVariablesAssignment_7()); }
(rule__Constraint__VariablesAssignment_7)*
{ after(grammarAccess.getConstraintAccess().getVariablesAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__8__Impl
	rule__Constraint__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getMessageAssignment_8()); }
(rule__Constraint__MessageAssignment_8)
{ after(grammarAccess.getConstraintAccess().getMessageAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_9()); }

	'}' 

{ after(grammarAccess.getConstraintAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Constraint__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_5__0__Impl
	rule__Constraint__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getExceptionKeyword_5_0()); }

	'exception' 

{ after(grammarAccess.getConstraintAccess().getExceptionKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraint__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraint__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getExceptionAssignment_5_1()); }
(rule__Constraint__ExceptionAssignment_5_1)
{ after(grammarAccess.getConstraintAccess().getExceptionAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValueObject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueObject__Group__0__Impl
	rule__ValueObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getDocAssignment_0()); }
(rule__ValueObject__DocAssignment_0)
{ after(grammarAccess.getValueObjectAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueObject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueObject__Group__1__Impl
	rule__ValueObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getValueObjectKeyword_1()); }

	'value object' 

{ after(grammarAccess.getValueObjectAccess().getValueObjectKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueObject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueObject__Group__2__Impl
	rule__ValueObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getNameAssignment_2()); }
(rule__ValueObject__NameAssignment_2)
{ after(grammarAccess.getValueObjectAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueObject__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueObject__Group__3__Impl
	rule__ValueObject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getValueObjectAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueObject__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueObject__Group__4__Impl
	rule__ValueObject__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getMetaInfoAssignment_4()); }
(rule__ValueObject__MetaInfoAssignment_4)
{ after(grammarAccess.getValueObjectAccess().getMetaInfoAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueObject__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueObject__Group__5__Impl
	rule__ValueObject__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getVariablesAssignment_5()); }
(rule__ValueObject__VariablesAssignment_5)*
{ after(grammarAccess.getValueObjectAccess().getVariablesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueObject__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueObject__Group__6__Impl
	rule__ValueObject__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getConstructorsAssignment_6()); }
(rule__ValueObject__ConstructorsAssignment_6)*
{ after(grammarAccess.getValueObjectAccess().getConstructorsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueObject__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueObject__Group__7__Impl
	rule__ValueObject__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getMethodsAssignment_7()); }
(rule__ValueObject__MethodsAssignment_7)*
{ after(grammarAccess.getValueObjectAccess().getMethodsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueObject__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueObject__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getValueObjectAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__EnumObject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumObject__Group__0__Impl
	rule__EnumObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getDocAssignment_0()); }
(rule__EnumObject__DocAssignment_0)
{ after(grammarAccess.getEnumObjectAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumObject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumObject__Group__1__Impl
	rule__EnumObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getEnumKeyword_1()); }

	'enum' 

{ after(grammarAccess.getEnumObjectAccess().getEnumKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumObject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumObject__Group__2__Impl
	rule__EnumObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getNameAssignment_2()); }
(rule__EnumObject__NameAssignment_2)
{ after(grammarAccess.getEnumObjectAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumObject__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumObject__Group__3__Impl
	rule__EnumObject__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEnumObjectAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumObject__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumObject__Group__4__Impl
	rule__EnumObject__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getMetaInfoAssignment_4()); }
(rule__EnumObject__MetaInfoAssignment_4)
{ after(grammarAccess.getEnumObjectAccess().getMetaInfoAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumObject__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumObject__Group__5__Impl
	rule__EnumObject__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getVariablesAssignment_5()); }
(rule__EnumObject__VariablesAssignment_5)*
{ after(grammarAccess.getEnumObjectAccess().getVariablesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumObject__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumObject__Group__6__Impl
	rule__EnumObject__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getConstructorsAssignment_6()); }
(rule__EnumObject__ConstructorsAssignment_6)*
{ after(grammarAccess.getEnumObjectAccess().getConstructorsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumObject__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumObject__Group__7__Impl
	rule__EnumObject__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getMethodsAssignment_7()); }
(rule__EnumObject__MethodsAssignment_7)*
{ after(grammarAccess.getEnumObjectAccess().getMethodsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumObject__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumObject__Group__8__Impl
	rule__EnumObject__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getInstancesKeyword_8()); }

	'instances' 

{ after(grammarAccess.getEnumObjectAccess().getInstancesKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumObject__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumObject__Group__9__Impl
	rule__EnumObject__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getLeftCurlyBracketKeyword_9()); }

	'{' 

{ after(grammarAccess.getEnumObjectAccess().getLeftCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumObject__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumObject__Group__10__Impl
	rule__EnumObject__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getEnumObjectAccess().getInstancesAssignment_10()); }
(rule__EnumObject__InstancesAssignment_10)
{ after(grammarAccess.getEnumObjectAccess().getInstancesAssignment_10()); }
)
(
{ before(grammarAccess.getEnumObjectAccess().getInstancesAssignment_10()); }
(rule__EnumObject__InstancesAssignment_10)*
{ after(grammarAccess.getEnumObjectAccess().getInstancesAssignment_10()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumObject__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumObject__Group__11__Impl
	rule__EnumObject__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getRightCurlyBracketKeyword_11()); }

	'}' 

{ after(grammarAccess.getEnumObjectAccess().getRightCurlyBracketKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumObject__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumObject__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getRightCurlyBracketKeyword_12()); }

	'}' 

{ after(grammarAccess.getEnumObjectAccess().getRightCurlyBracketKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__EnumInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumInstance__Group__0__Impl
	rule__EnumInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getDocAssignment_0()); }
(rule__EnumInstance__DocAssignment_0)
{ after(grammarAccess.getEnumInstanceAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumInstance__Group__1__Impl
	rule__EnumInstance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getNameAssignment_1()); }
(rule__EnumInstance__NameAssignment_1)
{ after(grammarAccess.getEnumInstanceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumInstance__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumInstance__Group__2__Impl
	rule__EnumInstance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getGroup_2()); }
(rule__EnumInstance__Group_2__0)?
{ after(grammarAccess.getEnumInstanceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumInstance__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumInstance__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getEnumInstanceAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumInstance__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumInstance__Group_2__0__Impl
	rule__EnumInstance__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getEnumInstanceAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumInstance__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumInstance__Group_2__1__Impl
	rule__EnumInstance__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getParamsAssignment_2_1()); }
(rule__EnumInstance__ParamsAssignment_2_1)
{ after(grammarAccess.getEnumInstanceAccess().getParamsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumInstance__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumInstance__Group_2__2__Impl
	rule__EnumInstance__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getGroup_2_2()); }
(rule__EnumInstance__Group_2_2__0)*
{ after(grammarAccess.getEnumInstanceAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumInstance__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumInstance__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getEnumInstanceAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumInstance__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumInstance__Group_2_2__0__Impl
	rule__EnumInstance__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getEnumInstanceAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumInstance__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumInstance__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getParamsAssignment_2_2_1()); }
(rule__EnumInstance__ParamsAssignment_2_2_1)
{ after(grammarAccess.getEnumInstanceAccess().getParamsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getDocAssignment_0()); }
(rule__Entity__DocAssignment_0)
{ after(grammarAccess.getEntityAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getEntityKeyword_1()); }

	'entity' 

{ after(grammarAccess.getEntityAccess().getEntityKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_2()); }
(rule__Entity__NameAssignment_2)
{ after(grammarAccess.getEntityAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getMetaInfoAssignment_4()); }
(rule__Entity__MetaInfoAssignment_4)
{ after(grammarAccess.getEntityAccess().getMetaInfoAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__5__Impl
	rule__Entity__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getVariablesAssignment_5()); }
(rule__Entity__VariablesAssignment_5)*
{ after(grammarAccess.getEntityAccess().getVariablesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__6__Impl
	rule__Entity__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getConstructorsAssignment_6()); }
(rule__Entity__ConstructorsAssignment_6)*
{ after(grammarAccess.getEntityAccess().getConstructorsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__7__Impl
	rule__Entity__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getMethodsAssignment_7()); }
(rule__Entity__MethodsAssignment_7)*
{ after(grammarAccess.getEntityAccess().getMethodsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Aggregate__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__0__Impl
	rule__Aggregate__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getDocAssignment_0()); }
(rule__Aggregate__DocAssignment_0)
{ after(grammarAccess.getAggregateAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__1__Impl
	rule__Aggregate__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getAggregateKeyword_1()); }

	'aggregate' 

{ after(grammarAccess.getAggregateAccess().getAggregateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__2__Impl
	rule__Aggregate__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getNameAssignment_2()); }
(rule__Aggregate__NameAssignment_2)
{ after(grammarAccess.getAggregateAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__3__Impl
	rule__Aggregate__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getAggregateAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__4__Impl
	rule__Aggregate__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getMetaInfoAssignment_4()); }
(rule__Aggregate__MetaInfoAssignment_4)
{ after(grammarAccess.getAggregateAccess().getMetaInfoAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__5__Impl
	rule__Aggregate__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getVariablesAssignment_5()); }
(rule__Aggregate__VariablesAssignment_5)*
{ after(grammarAccess.getAggregateAccess().getVariablesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__6__Impl
	rule__Aggregate__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getConstructorsAssignment_6()); }
(rule__Aggregate__ConstructorsAssignment_6)*
{ after(grammarAccess.getAggregateAccess().getConstructorsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__7__Impl
	rule__Aggregate__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getMethodsAssignment_7()); }
(rule__Aggregate__MethodsAssignment_7)*
{ after(grammarAccess.getAggregateAccess().getMethodsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Aggregate__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Aggregate__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getAggregateAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Constructor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__0__Impl
	rule__Constructor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getDocAssignment_0()); }
(rule__Constructor__DocAssignment_0)?
{ after(grammarAccess.getConstructorAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__1__Impl
	rule__Constructor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getConstructorKeyword_1()); }

	'constructor' 

{ after(grammarAccess.getConstructorAccess().getConstructorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__2__Impl
	rule__Constructor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getNameAssignment_2()); }
(rule__Constructor__NameAssignment_2)
{ after(grammarAccess.getConstructorAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__3__Impl
	rule__Constructor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getConstructorAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__4__Impl
	rule__Constructor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getVariablesAssignment_4()); }
(rule__Constructor__VariablesAssignment_4)*
{ after(grammarAccess.getConstructorAccess().getVariablesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__5__Impl
	rule__Constructor__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getConstraintsAssignment_5()); }
(rule__Constructor__ConstraintsAssignment_5)?
{ after(grammarAccess.getConstructorAccess().getConstraintsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__6__Impl
	rule__Constructor__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getEventsAssignment_6()); }
(rule__Constructor__EventsAssignment_6)*
{ after(grammarAccess.getConstructorAccess().getEventsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constructor__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constructor__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getConstructorAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Method__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__0__Impl
	rule__Method__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getDocAssignment_0()); }
(rule__Method__DocAssignment_0)?
{ after(grammarAccess.getMethodAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__1__Impl
	rule__Method__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getMethodKeyword_1()); }

	'method' 

{ after(grammarAccess.getMethodAccess().getMethodKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__2__Impl
	rule__Method__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameAssignment_2()); }
(rule__Method__NameAssignment_2)
{ after(grammarAccess.getMethodAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__3__Impl
	rule__Method__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getGroup_3()); }
(rule__Method__Group_3__0)?
{ after(grammarAccess.getMethodAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__4__Impl
	rule__Method__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getMethodAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__5__Impl
	rule__Method__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getVariablesAssignment_5()); }
(rule__Method__VariablesAssignment_5)*
{ after(grammarAccess.getMethodAccess().getVariablesAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__6__Impl
	rule__Method__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getConstraintsAssignment_6()); }
(rule__Method__ConstraintsAssignment_6)?
{ after(grammarAccess.getMethodAccess().getConstraintsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__7__Impl
	rule__Method__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getEventsAssignment_7()); }
(rule__Method__EventsAssignment_7)*
{ after(grammarAccess.getMethodAccess().getEventsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getMethodAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Method__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3__0__Impl
	rule__Method__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRefKeyword_3_0()); }

	'ref' 

{ after(grammarAccess.getMethodAccess().getRefKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Method__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Method__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Method__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRefMethodAssignment_3_1()); }
(rule__Method__RefMethodAssignment_3_1)
{ after(grammarAccess.getMethodAccess().getRefMethodAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Event__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__0__Impl
	rule__Event__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getDocAssignment_0()); }
(rule__Event__DocAssignment_0)?
{ after(grammarAccess.getEventAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__1__Impl
	rule__Event__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getEventKeyword_1()); }

	'event' 

{ after(grammarAccess.getEventAccess().getEventKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__2__Impl
	rule__Event__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameAssignment_2()); }
(rule__Event__NameAssignment_2)
{ after(grammarAccess.getEventAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__3__Impl
	rule__Event__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEventAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__4__Impl
	rule__Event__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getVariablesAssignment_4()); }
(rule__Event__VariablesAssignment_4)*
{ after(grammarAccess.getEventAccess().getVariablesAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Event__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Event__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Event__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getEventAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TypeMetaInfo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group__0__Impl
	rule__TypeMetaInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getTypeMetaInfoAction_0()); }
(

)
{ after(grammarAccess.getTypeMetaInfoAccess().getTypeMetaInfoAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group__1__Impl
	rule__TypeMetaInfo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getGroup_1()); }
(rule__TypeMetaInfo__Group_1__0)?
{ after(grammarAccess.getTypeMetaInfoAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group__2__Impl
	rule__TypeMetaInfo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getGroup_2()); }
(rule__TypeMetaInfo__Group_2__0)?
{ after(grammarAccess.getTypeMetaInfoAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group__3__Impl
	rule__TypeMetaInfo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getGroup_3()); }
(rule__TypeMetaInfo__Group_3__0)?
{ after(grammarAccess.getTypeMetaInfoAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group__4__Impl
	rule__TypeMetaInfo__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getGroup_4()); }
(rule__TypeMetaInfo__Group_4__0)?
{ after(grammarAccess.getTypeMetaInfoAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getGroup_5()); }
(rule__TypeMetaInfo__Group_5__0)?
{ after(grammarAccess.getTypeMetaInfoAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TypeMetaInfo__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_1__0__Impl
	rule__TypeMetaInfo__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getSlabelKeyword_1_0()); }

	'slabel' 

{ after(grammarAccess.getTypeMetaInfoAccess().getSlabelKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getSlabelAssignment_1_1()); }
(rule__TypeMetaInfo__SlabelAssignment_1_1)
{ after(grammarAccess.getTypeMetaInfoAccess().getSlabelAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeMetaInfo__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_2__0__Impl
	rule__TypeMetaInfo__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getLabelKeyword_2_0()); }

	'label' 

{ after(grammarAccess.getTypeMetaInfoAccess().getLabelKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getLabelAssignment_2_1()); }
(rule__TypeMetaInfo__LabelAssignment_2_1)
{ after(grammarAccess.getTypeMetaInfoAccess().getLabelAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeMetaInfo__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_3__0__Impl
	rule__TypeMetaInfo__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getTooltippKeyword_3_0()); }

	'tooltipp' 

{ after(grammarAccess.getTypeMetaInfoAccess().getTooltippKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getTooltippAssignment_3_1()); }
(rule__TypeMetaInfo__TooltippAssignment_3_1)
{ after(grammarAccess.getTypeMetaInfoAccess().getTooltippAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeMetaInfo__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_4__0__Impl
	rule__TypeMetaInfo__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getPromptKeyword_4_0()); }

	'prompt' 

{ after(grammarAccess.getTypeMetaInfoAccess().getPromptKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getPromptAssignment_4_1()); }
(rule__TypeMetaInfo__PromptAssignment_4_1)
{ after(grammarAccess.getTypeMetaInfoAccess().getPromptAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeMetaInfo__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_5__0__Impl
	rule__TypeMetaInfo__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getExamplesKeyword_5_0()); }

	'examples' 

{ after(grammarAccess.getTypeMetaInfoAccess().getExamplesKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeMetaInfo__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeMetaInfo__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getExamplesAssignment_5_1()); }
(rule__TypeMetaInfo__ExamplesAssignment_5_1)*
{ after(grammarAccess.getTypeMetaInfoAccess().getExamplesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getDocAssignment_0()); }
(rule__Variable__DocAssignment_0)?
{ after(grammarAccess.getVariableAccess().getDocAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTechnicalIdAssignment_1()); }
(rule__Variable__TechnicalIdAssignment_1)?
{ after(grammarAccess.getVariableAccess().getTechnicalIdAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getBusinessKeyAssignment_2()); }
(rule__Variable__BusinessKeyAssignment_2)?
{ after(grammarAccess.getVariableAccess().getBusinessKeyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__3__Impl
	rule__Variable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getBusinessNameAssignment_3()); }
(rule__Variable__BusinessNameAssignment_3)?
{ after(grammarAccess.getVariableAccess().getBusinessNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__4__Impl
	rule__Variable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNullableAssignment_4()); }
(rule__Variable__NullableAssignment_4)?
{ after(grammarAccess.getVariableAccess().getNullableAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__5__Impl
	rule__Variable__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeAssignment_5()); }
(rule__Variable__TypeAssignment_5)
{ after(grammarAccess.getVariableAccess().getTypeAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__6__Impl
	rule__Variable__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getMultiplicityAssignment_6()); }
(rule__Variable__MultiplicityAssignment_6)?
{ after(grammarAccess.getVariableAccess().getMultiplicityAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__7__Impl
	rule__Variable__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_7()); }
(rule__Variable__NameAssignment_7)
{ after(grammarAccess.getVariableAccess().getNameAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__8__Impl
	rule__Variable__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInvariantsAssignment_8()); }
(rule__Variable__InvariantsAssignment_8)?
{ after(grammarAccess.getVariableAccess().getInvariantsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getAlternatives_9()); }
(rule__Variable__Alternatives_9)
{ after(grammarAccess.getVariableAccess().getAlternatives_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Constraints__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraints__Group__0__Impl
	rule__Constraints__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsAccess().getConstraintsKeyword_0()); }

	'constraints' 

{ after(grammarAccess.getConstraintsAccess().getConstraintsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraints__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraints__Group__1__Impl
	rule__Constraints__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getConstraintsAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraints__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraints__Group__2__Impl
	rule__Constraints__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsAccess().getCallsAssignment_2()); }
(rule__Constraints__CallsAssignment_2)
{ after(grammarAccess.getConstraintsAccess().getCallsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraints__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraints__Group__3__Impl
	rule__Constraints__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsAccess().getGroup_3()); }
(rule__Constraints__Group_3__0)*
{ after(grammarAccess.getConstraintsAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraints__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraints__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getConstraintsAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Constraints__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraints__Group_3__0__Impl
	rule__Constraints__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getConstraintsAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constraints__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constraints__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsAccess().getCallsAssignment_3_1()); }
(rule__Constraints__CallsAssignment_3_1)
{ after(grammarAccess.getConstraintsAccess().getCallsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Invariants__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invariants__Group__0__Impl
	rule__Invariants__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getInvariantsKeyword_0()); }

	'invariants' 

{ after(grammarAccess.getInvariantsAccess().getInvariantsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invariants__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invariants__Group__1__Impl
	rule__Invariants__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getCallsAssignment_1()); }
(rule__Invariants__CallsAssignment_1)
{ after(grammarAccess.getInvariantsAccess().getCallsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invariants__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invariants__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getGroup_2()); }
(rule__Invariants__Group_2__0)*
{ after(grammarAccess.getInvariantsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Invariants__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invariants__Group_2__0__Impl
	rule__Invariants__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getInvariantsAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Invariants__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Invariants__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getCallsAssignment_2_1()); }
(rule__Invariants__CallsAssignment_2_1)
{ after(grammarAccess.getInvariantsAccess().getCallsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OverriddenTypeMetaInfo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OverriddenTypeMetaInfo__Group__0__Impl
	rule__OverriddenTypeMetaInfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OverriddenTypeMetaInfo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOverriddenTypeMetaInfoAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getOverriddenTypeMetaInfoAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OverriddenTypeMetaInfo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OverriddenTypeMetaInfo__Group__1__Impl
	rule__OverriddenTypeMetaInfo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OverriddenTypeMetaInfo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOverriddenTypeMetaInfoAccess().getMetaInfoAssignment_1()); }
(rule__OverriddenTypeMetaInfo__MetaInfoAssignment_1)
{ after(grammarAccess.getOverriddenTypeMetaInfoAccess().getMetaInfoAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OverriddenTypeMetaInfo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OverriddenTypeMetaInfo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OverriddenTypeMetaInfo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOverriddenTypeMetaInfoAccess().getRightCurlyBracketKeyword_2()); }

	'}' 

{ after(grammarAccess.getOverriddenTypeMetaInfoAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Message__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__0__Impl
	rule__Message__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getMessageKeyword_0()); }

	'message' 

{ after(grammarAccess.getMessageAccess().getMessageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__1__Impl
	rule__Message__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getTextAssignment_1()); }
(rule__Message__TextAssignment_1)
{ after(grammarAccess.getMessageAccess().getTextAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getGroup_2()); }
(rule__Message__Group_2__0)?
{ after(grammarAccess.getMessageAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Message__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group_2__0__Impl
	rule__Message__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getLeftCurlyBracketKeyword_2_0()); }

	'{' 

{ after(grammarAccess.getMessageAccess().getLeftCurlyBracketKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group_2__1__Impl
	rule__Message__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getVariablesAssignment_2_1()); }
(rule__Message__VariablesAssignment_2_1)*
{ after(grammarAccess.getMessageAccess().getVariablesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getRightCurlyBracketKeyword_2_2()); }

	'}' 

{ after(grammarAccess.getMessageAccess().getRightCurlyBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstraintCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group__0__Impl
	rule__ConstraintCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getConstraintAssignment_0()); }
(rule__ConstraintCall__ConstraintAssignment_0)
{ after(grammarAccess.getConstraintCallAccess().getConstraintAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getGroup_1()); }
(rule__ConstraintCall__Group_1__0)?
{ after(grammarAccess.getConstraintCallAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstraintCall__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group_1__0__Impl
	rule__ConstraintCall__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getConstraintCallAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintCall__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group_1__1__Impl
	rule__ConstraintCall__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getParamsAssignment_1_1()); }
(rule__ConstraintCall__ParamsAssignment_1_1)
{ after(grammarAccess.getConstraintCallAccess().getParamsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintCall__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group_1__2__Impl
	rule__ConstraintCall__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getGroup_1_2()); }
(rule__ConstraintCall__Group_1_2__0)*
{ after(grammarAccess.getConstraintCallAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintCall__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getConstraintCallAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstraintCall__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group_1_2__0__Impl
	rule__ConstraintCall__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getConstraintCallAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstraintCall__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstraintCall__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getParamsAssignment_1_2_1()); }
(rule__ConstraintCall__ParamsAssignment_1_2_1)
{ after(grammarAccess.getConstraintCallAccess().getParamsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getGroup_1()); }
(rule__FQN__Group_1__0)*
{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQN__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FQNWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQNWithWildcard__Group__0__Impl
	rule__FQNWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQNWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNWithWildcardAccess().getFQNParserRuleCall_0()); }
	ruleFQN
{ after(grammarAccess.getFQNWithWildcardAccess().getFQNParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQNWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQNWithWildcard__Group__1__Impl
	rule__FQNWithWildcard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FQNWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNWithWildcardAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getFQNWithWildcardAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FQNWithWildcard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FQNWithWildcard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQNWithWildcard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFQNWithWildcardAccess().getAsteriskKeyword_2()); }

	'*' 

{ after(grammarAccess.getFQNWithWildcardAccess().getAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BooleanLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__0__Impl
	rule__BooleanLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
(

)
{ after(grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1()); }
(rule__BooleanLiteral__ValueAssignment_1)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NullLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__0__Impl
	rule__NullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
(

)
{ after(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getValueAssignment_1()); }
(rule__NullLiteral__ValueAssignment_1)
{ after(grammarAccess.getNullLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumberLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__0__Impl
	rule__NumberLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); }
(

)
{ after(grammarAccess.getNumberLiteralAccess().getNumberLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); }
(rule__NumberLiteral__ValueAssignment_1)
{ after(grammarAccess.getNumberLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringLiteral__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__0__Impl
	rule__StringLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
(

)
{ after(grammarAccess.getStringLiteralAccess().getStringLiteralAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringLiteral__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
(rule__StringLiteral__ValueAssignment_1)
{ after(grammarAccess.getStringLiteralAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__0__Impl
	rule__Number__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
(rule__Number__Alternatives_1_0)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getGroup_1_1()); }
(rule__Number__Group_1_1__0)?
{ after(grammarAccess.getNumberAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Number__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__0__Impl
	rule__Number__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getNumberAccess().getFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Number__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
(rule__Number__Alternatives_1_1_1)
{ after(grammarAccess.getNumberAccess().getAlternatives_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__DomainModel__NamespaceAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDomainModelAccess().getNamespaceNamespaceParserRuleCall_0()); }
	ruleNamespace{ after(grammarAccess.getDomainModelAccess().getNamespaceNamespaceParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getNameFQNParserRuleCall_1_0()); }
	ruleFQN{ after(grammarAccess.getNamespaceAccess().getNameFQNParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__ImportsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getImportsImportParserRuleCall_3_0()); }
	ruleImport{ after(grammarAccess.getNamespaceAccess().getImportsImportParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__ElementsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceAccess().getElementsAbstractElementParserRuleCall_4_0()); }
	ruleAbstractElement{ after(grammarAccess.getNamespaceAccess().getElementsAbstractElementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAlternatives_1_0()); }
(rule__Import__ImportedNamespaceAlternatives_1_0)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getExternalTypeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getConstraintAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getConstraintAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getTargetConstraintTargetCrossReference_4_0()); }
(
{ before(grammarAccess.getConstraintAccess().getTargetConstraintTargetIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getConstraintAccess().getTargetConstraintTargetIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getConstraintAccess().getTargetConstraintTargetCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__ExceptionAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getExceptionIDTerminalRuleCall_5_1_0()); }
	RULE_ID{ after(grammarAccess.getConstraintAccess().getExceptionIDTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__VariablesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getVariablesVariableParserRuleCall_7_0()); }
	ruleVariable{ after(grammarAccess.getConstraintAccess().getVariablesVariableParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraint__MessageAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintAccess().getMessageMessageParserRuleCall_8_0()); }
	ruleMessage{ after(grammarAccess.getConstraintAccess().getMessageMessageParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getValueObjectAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getValueObjectAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__MetaInfoAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getMetaInfoTypeMetaInfoParserRuleCall_4_0()); }
	ruleTypeMetaInfo{ after(grammarAccess.getValueObjectAccess().getMetaInfoTypeMetaInfoParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__VariablesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getVariablesVariableParserRuleCall_5_0()); }
	ruleVariable{ after(grammarAccess.getValueObjectAccess().getVariablesVariableParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__ConstructorsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getConstructorsConstructorParserRuleCall_6_0()); }
	ruleConstructor{ after(grammarAccess.getValueObjectAccess().getConstructorsConstructorParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueObject__MethodsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueObjectAccess().getMethodsMethodParserRuleCall_7_0()); }
	ruleMethod{ after(grammarAccess.getValueObjectAccess().getMethodsMethodParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getEnumObjectAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getEnumObjectAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__MetaInfoAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getMetaInfoTypeMetaInfoParserRuleCall_4_0()); }
	ruleTypeMetaInfo{ after(grammarAccess.getEnumObjectAccess().getMetaInfoTypeMetaInfoParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__VariablesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getVariablesVariableParserRuleCall_5_0()); }
	ruleVariable{ after(grammarAccess.getEnumObjectAccess().getVariablesVariableParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__ConstructorsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getConstructorsConstructorParserRuleCall_6_0()); }
	ruleConstructor{ after(grammarAccess.getEnumObjectAccess().getConstructorsConstructorParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__MethodsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getMethodsMethodParserRuleCall_7_0()); }
	ruleMethod{ after(grammarAccess.getEnumObjectAccess().getMethodsMethodParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumObject__InstancesAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumObjectAccess().getInstancesEnumInstanceParserRuleCall_10_0()); }
	ruleEnumInstance{ after(grammarAccess.getEnumObjectAccess().getInstancesEnumInstanceParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getEnumInstanceAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumInstanceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__ParamsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getParamsLiteralParserRuleCall_2_1_0()); }
	ruleLiteral{ after(grammarAccess.getEnumInstanceAccess().getParamsLiteralParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumInstance__ParamsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumInstanceAccess().getParamsLiteralParserRuleCall_2_2_1_0()); }
	ruleLiteral{ after(grammarAccess.getEnumInstanceAccess().getParamsLiteralParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getEntityAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__MetaInfoAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getMetaInfoTypeMetaInfoParserRuleCall_4_0()); }
	ruleTypeMetaInfo{ after(grammarAccess.getEntityAccess().getMetaInfoTypeMetaInfoParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__VariablesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getVariablesVariableParserRuleCall_5_0()); }
	ruleVariable{ after(grammarAccess.getEntityAccess().getVariablesVariableParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ConstructorsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getConstructorsConstructorParserRuleCall_6_0()); }
	ruleConstructor{ after(grammarAccess.getEntityAccess().getConstructorsConstructorParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__MethodsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getMethodsMethodParserRuleCall_7_0()); }
	ruleMethod{ after(grammarAccess.getEntityAccess().getMethodsMethodParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getAggregateAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAggregateAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__MetaInfoAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getMetaInfoTypeMetaInfoParserRuleCall_4_0()); }
	ruleTypeMetaInfo{ after(grammarAccess.getAggregateAccess().getMetaInfoTypeMetaInfoParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__VariablesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getVariablesVariableParserRuleCall_5_0()); }
	ruleVariable{ after(grammarAccess.getAggregateAccess().getVariablesVariableParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__ConstructorsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getConstructorsConstructorParserRuleCall_6_0()); }
	ruleConstructor{ after(grammarAccess.getAggregateAccess().getConstructorsConstructorParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Aggregate__MethodsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAggregateAccess().getMethodsMethodParserRuleCall_7_0()); }
	ruleMethod{ after(grammarAccess.getAggregateAccess().getMethodsMethodParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getConstructorAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getConstructorAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__VariablesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getVariablesVariableParserRuleCall_4_0()); }
	ruleVariable{ after(grammarAccess.getConstructorAccess().getVariablesVariableParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__ConstraintsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getConstraintsConstraintsParserRuleCall_5_0()); }
	ruleConstraints{ after(grammarAccess.getConstructorAccess().getConstraintsConstraintsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constructor__EventsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorAccess().getEventsEventParserRuleCall_6_0()); }
	ruleEvent{ after(grammarAccess.getConstructorAccess().getEventsEventParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getMethodAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getMethodAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__RefMethodAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getRefMethodMethodCrossReference_3_1_0()); }
(
{ before(grammarAccess.getMethodAccess().getRefMethodMethodFQNParserRuleCall_3_1_0_1()); }
	ruleFQN{ after(grammarAccess.getMethodAccess().getRefMethodMethodFQNParserRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getMethodAccess().getRefMethodMethodCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__VariablesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getVariablesVariableParserRuleCall_5_0()); }
	ruleVariable{ after(grammarAccess.getMethodAccess().getVariablesVariableParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__ConstraintsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getConstraintsConstraintsParserRuleCall_6_0()); }
	ruleConstraints{ after(grammarAccess.getMethodAccess().getConstraintsConstraintsParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Method__EventsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodAccess().getEventsEventParserRuleCall_7_0()); }
	ruleEvent{ after(grammarAccess.getMethodAccess().getEventsEventParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getEventAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getEventAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Event__VariablesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEventAccess().getVariablesVariableParserRuleCall_4_0()); }
	ruleVariable{ after(grammarAccess.getEventAccess().getVariablesVariableParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__SlabelAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getSlabelSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getTypeMetaInfoAccess().getSlabelSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__LabelAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getLabelSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getTypeMetaInfoAccess().getLabelSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__TooltippAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getTooltippSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getTypeMetaInfoAccess().getTooltippSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__PromptAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getPromptSTRINGTerminalRuleCall_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getTypeMetaInfoAccess().getPromptSTRINGTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeMetaInfo__ExamplesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeMetaInfoAccess().getExamplesSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getTypeMetaInfoAccess().getExamplesSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__DocAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getDocDOCTerminalRuleCall_0_0()); }
	RULE_DOC{ after(grammarAccess.getVariableAccess().getDocDOCTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TechnicalIdAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTechnicalIdTechnicalIdKeyword_1_0()); }
(
{ before(grammarAccess.getVariableAccess().getTechnicalIdTechnicalIdKeyword_1_0()); }

	'technicalId' 

{ after(grammarAccess.getVariableAccess().getTechnicalIdTechnicalIdKeyword_1_0()); }
)

{ after(grammarAccess.getVariableAccess().getTechnicalIdTechnicalIdKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__BusinessKeyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getBusinessKeyBusinessKeyKeyword_2_0()); }
(
{ before(grammarAccess.getVariableAccess().getBusinessKeyBusinessKeyKeyword_2_0()); }

	'businessKey' 

{ after(grammarAccess.getVariableAccess().getBusinessKeyBusinessKeyKeyword_2_0()); }
)

{ after(grammarAccess.getVariableAccess().getBusinessKeyBusinessKeyKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__BusinessNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getBusinessNameBusinessNameKeyword_3_0()); }
(
{ before(grammarAccess.getVariableAccess().getBusinessNameBusinessNameKeyword_3_0()); }

	'businessName' 

{ after(grammarAccess.getVariableAccess().getBusinessNameBusinessNameKeyword_3_0()); }
)

{ after(grammarAccess.getVariableAccess().getBusinessNameBusinessNameKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NullableAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNullableNullableKeyword_4_0()); }
(
{ before(grammarAccess.getVariableAccess().getNullableNullableKeyword_4_0()); }

	'nullable' 

{ after(grammarAccess.getVariableAccess().getNullableNullableKeyword_4_0()); }
)

{ after(grammarAccess.getVariableAccess().getNullableNullableKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeTypeCrossReference_5_0()); }
(
{ before(grammarAccess.getVariableAccess().getTypeTypeIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getTypeTypeIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getVariableAccess().getTypeTypeCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__MultiplicityAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getMultiplicityAsteriskKeyword_6_0()); }
(
{ before(grammarAccess.getVariableAccess().getMultiplicityAsteriskKeyword_6_0()); }

	'*' 

{ after(grammarAccess.getVariableAccess().getMultiplicityAsteriskKeyword_6_0()); }
)

{ after(grammarAccess.getVariableAccess().getMultiplicityAsteriskKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_7_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__InvariantsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInvariantsInvariantsParserRuleCall_8_0()); }
	ruleInvariants{ after(grammarAccess.getVariableAccess().getInvariantsInvariantsParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__OverriddenAssignment_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getOverriddenOverriddenTypeMetaInfoParserRuleCall_9_0_0()); }
	ruleOverriddenTypeMetaInfo{ after(grammarAccess.getVariableAccess().getOverriddenOverriddenTypeMetaInfoParserRuleCall_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__CallsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsAccess().getCallsConstraintCallParserRuleCall_2_0()); }
	ruleConstraintCall{ after(grammarAccess.getConstraintsAccess().getCallsConstraintCallParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constraints__CallsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintsAccess().getCallsConstraintCallParserRuleCall_3_1_0()); }
	ruleConstraintCall{ after(grammarAccess.getConstraintsAccess().getCallsConstraintCallParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__CallsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getCallsConstraintCallParserRuleCall_1_0()); }
	ruleConstraintCall{ after(grammarAccess.getInvariantsAccess().getCallsConstraintCallParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Invariants__CallsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInvariantsAccess().getCallsConstraintCallParserRuleCall_2_1_0()); }
	ruleConstraintCall{ after(grammarAccess.getInvariantsAccess().getCallsConstraintCallParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OverriddenTypeMetaInfo__MetaInfoAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOverriddenTypeMetaInfoAccess().getMetaInfoTypeMetaInfoParserRuleCall_1_0()); }
	ruleTypeMetaInfo{ after(grammarAccess.getOverriddenTypeMetaInfoAccess().getMetaInfoTypeMetaInfoParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__TextAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getTextSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getMessageAccess().getTextSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__VariablesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getVariablesVariableParserRuleCall_2_1_0()); }
	ruleVariable{ after(grammarAccess.getMessageAccess().getVariablesVariableParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__ConstraintAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getConstraintConstraintCrossReference_0_0()); }
(
{ before(grammarAccess.getConstraintCallAccess().getConstraintConstraintIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getConstraintCallAccess().getConstraintConstraintIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getConstraintCallAccess().getConstraintConstraintCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__ParamsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getParamsLiteralParserRuleCall_1_1_0()); }
	ruleLiteral{ after(grammarAccess.getConstraintCallAccess().getParamsLiteralParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstraintCall__ParamsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstraintCallAccess().getParamsLiteralParserRuleCall_1_2_1_0()); }
	ruleLiteral{ after(grammarAccess.getConstraintCallAccess().getParamsLiteralParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralAccess().getValueAlternatives_1_0()); }
(rule__BooleanLiteral__ValueAlternatives_1_0)
{ after(grammarAccess.getBooleanLiteralAccess().getValueAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullLiteralAccess().getValueNullKeyword_1_0()); }
(
{ before(grammarAccess.getNullLiteralAccess().getValueNullKeyword_1_0()); }

	'null' 

{ after(grammarAccess.getNullLiteralAccess().getValueNullKeyword_1_0()); }
)

{ after(grammarAccess.getNullLiteralAccess().getValueNullKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); }
	ruleNumber{ after(grammarAccess.getNumberLiteralAccess().getValueNumberParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : ('A'..'Z'|'a'..'z') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_HEX : ('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F'|'_')+ ('#' (('b'|'B') ('i'|'I')|('l'|'L')))?;

RULE_INT : '0'..'9' ('0'..'9'|'_')*;

RULE_DECIMAL : RULE_INT (('e'|'E') ('+'|'-')? RULE_INT)? (('b'|'B') ('i'|'I'|'d'|'D')|('l'|'L'|'d'|'D'|'f'|'F'))?;

RULE_DOC : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


